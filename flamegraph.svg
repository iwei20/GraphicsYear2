<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="389.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="117770"><g><title>ntdll`RtlpOptimizeWaitOnAddressWaitList (77 samples, 0.07%)</title><rect x="0.0051%" y="325" width="0.0654%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="77"/><text x="0.2551%" y="335.50"></text></g><g><title>0x2b494b602c8 (78 samples, 0.07%)</title><rect x="0.0051%" y="341" width="0.0662%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="78"/><text x="0.2551%" y="351.50"></text></g><g><title>ntdll`NtYieldExecution (78 samples, 0.07%)</title><rect x="0.0959%" y="325" width="0.0662%" height="15" fill="rgb(221,193,54)" fg:x="113" fg:w="78"/><text x="0.3459%" y="335.50"></text></g><g><title>KERNELBASE`SwitchToThread (79 samples, 0.07%)</title><rect x="0.0959%" y="341" width="0.0671%" height="15" fill="rgb(248,212,6)" fg:x="113" fg:w="79"/><text x="0.3459%" y="351.50"></text></g><g><title>VCRUNTIME140`memcpy (679 samples, 0.58%)</title><rect x="0.1724%" y="341" width="0.5765%" height="15" fill="rgb(208,68,35)" fg:x="203" fg:w="679"/><text x="0.4224%" y="351.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (18 samples, 0.02%)</title><rect x="0.7498%" y="213" width="0.0153%" height="15" fill="rgb(232,128,0)" fg:x="883" fg:w="18"/><text x="0.9998%" y="223.50"></text></g><g><title>ntdll`RtlpFindAndCommitPages (40 samples, 0.03%)</title><rect x="0.7498%" y="229" width="0.0340%" height="15" fill="rgb(207,160,47)" fg:x="883" fg:w="40"/><text x="0.9998%" y="239.50"></text></g><g><title>ntdll`RtlpCreateUCREntry (22 samples, 0.02%)</title><rect x="0.7651%" y="213" width="0.0187%" height="15" fill="rgb(228,23,34)" fg:x="901" fg:w="22"/><text x="1.0151%" y="223.50"></text></g><g><title>graphics_year2`alloc::vec::Vec&lt;graphics_year2::parser::Frame,alloc::alloc::Global&gt;::extend_with&lt;graphics_year2::parser::Frame,alloc::alloc::Global,alloc::vec::ExtendElement (48 samples, 0.04%)</title><rect x="0.7498%" y="341" width="0.0408%" height="15" fill="rgb(218,30,26)" fg:x="883" fg:w="48"/><text x="0.9998%" y="351.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (48 samples, 0.04%)</title><rect x="0.7498%" y="325" width="0.0408%" height="15" fill="rgb(220,122,19)" fg:x="883" fg:w="48"/><text x="0.9998%" y="335.50"></text></g><g><title>ntdll`RtlpAllocateHeap (48 samples, 0.04%)</title><rect x="0.7498%" y="309" width="0.0408%" height="15" fill="rgb(250,228,42)" fg:x="883" fg:w="48"/><text x="0.9998%" y="319.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (48 samples, 0.04%)</title><rect x="0.7498%" y="293" width="0.0408%" height="15" fill="rgb(240,193,28)" fg:x="883" fg:w="48"/><text x="0.9998%" y="303.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (48 samples, 0.04%)</title><rect x="0.7498%" y="277" width="0.0408%" height="15" fill="rgb(216,20,37)" fg:x="883" fg:w="48"/><text x="0.9998%" y="287.50"></text></g><g><title>ntdll`RtlpAllocateHeap (48 samples, 0.04%)</title><rect x="0.7498%" y="261" width="0.0408%" height="15" fill="rgb(206,188,39)" fg:x="883" fg:w="48"/><text x="0.9998%" y="271.50"></text></g><g><title>ntdll`RtlpExtendHeap (48 samples, 0.04%)</title><rect x="0.7498%" y="245" width="0.0408%" height="15" fill="rgb(217,207,13)" fg:x="883" fg:w="48"/><text x="0.9998%" y="255.50"></text></g><g><title>ntdll`RtlpAddWaitBlockToWaitList (63 samples, 0.05%)</title><rect x="1.1913%" y="213" width="0.0535%" height="15" fill="rgb(231,73,38)" fg:x="1403" fg:w="63"/><text x="1.4413%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (898 samples, 0.76%)</title><rect x="1.2728%" y="197" width="0.7625%" height="15" fill="rgb(225,20,46)" fg:x="1499" fg:w="898"/><text x="1.5228%" y="207.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (897 samples, 0.76%)</title><rect x="1.2737%" y="181" width="0.7617%" height="15" fill="rgb(210,31,41)" fg:x="1500" fg:w="897"/><text x="1.5237%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (2,632 samples, 2.23%)</title><rect x="1.2448%" y="213" width="2.2349%" height="15" fill="rgb(221,200,47)" fg:x="1466" fg:w="2632"/><text x="1.4948%" y="223.50">n..</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (1,701 samples, 1.44%)</title><rect x="2.0353%" y="197" width="1.4443%" height="15" fill="rgb(226,26,5)" fg:x="2397" fg:w="1701"/><text x="2.2853%" y="207.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (1,561 samples, 1.33%)</title><rect x="2.1542%" y="181" width="1.3255%" height="15" fill="rgb(249,33,26)" fg:x="2537" fg:w="1561"/><text x="2.4042%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (7,744 samples, 6.58%)</title><rect x="3.4797%" y="213" width="6.5755%" height="15" fill="rgb(235,183,28)" fg:x="4098" fg:w="7744"/><text x="3.7297%" y="223.50">ntdll`Rtl..</text></g><g><title>ntdll`NtAlertThreadByThreadId (7,740 samples, 6.57%)</title><rect x="3.4831%" y="197" width="6.5721%" height="15" fill="rgb(221,5,38)" fg:x="4102" fg:w="7740"/><text x="3.7331%" y="207.50">ntdll`NtA..</text></g><g><title>ntdll`RtlEnterCriticalSection (35,901 samples, 30.48%)</title><rect x="0.8508%" y="277" width="30.4840%" height="15" fill="rgb(247,18,42)" fg:x="1002" fg:w="35901"/><text x="1.1008%" y="287.50">ntdll`RtlEnterCriticalSection</text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (35,866 samples, 30.45%)</title><rect x="0.8805%" y="261" width="30.4543%" height="15" fill="rgb(241,131,45)" fg:x="1037" fg:w="35866"/><text x="1.1305%" y="271.50">ntdll`RtlpEnterCriticalSectionContended</text></g><g><title>ntdll`RtlpWaitOnCriticalSection (35,582 samples, 30.21%)</title><rect x="1.1217%" y="245" width="30.2131%" height="15" fill="rgb(249,31,29)" fg:x="1321" fg:w="35582"/><text x="1.3717%" y="255.50">ntdll`RtlpWaitOnCriticalSection</text></g><g><title>ntdll`RtlpWaitOnAddress (35,534 samples, 30.17%)</title><rect x="1.1624%" y="229" width="30.1724%" height="15" fill="rgb(225,111,53)" fg:x="1369" fg:w="35534"/><text x="1.4124%" y="239.50">ntdll`RtlpWaitOnAddress</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (25,061 samples, 21.28%)</title><rect x="10.0552%" y="213" width="21.2796%" height="15" fill="rgb(238,160,17)" fg:x="11842" fg:w="25061"/><text x="10.3052%" y="223.50">ntdll`RtlpWaitOnAddressWithTimeout</text></g><g><title>ntdll`NtWaitForAlertByThreadId (24,986 samples, 21.22%)</title><rect x="10.1189%" y="197" width="21.2159%" height="15" fill="rgb(214,148,48)" fg:x="11917" fg:w="24986"/><text x="10.3689%" y="207.50">ntdll`NtWaitForAlertByThreadId</text></g><g><title>ntdll`NtAlertThreadByThreadId (8,251 samples, 7.01%)</title><rect x="31.3942%" y="245" width="7.0060%" height="15" fill="rgb(232,36,49)" fg:x="36973" fg:w="8251"/><text x="31.6442%" y="255.50">ntdll`NtA..</text></g><g><title>ntdll`RtlLeaveCriticalSection (18,191 samples, 15.45%)</title><rect x="31.3348%" y="277" width="15.4462%" height="15" fill="rgb(209,103,24)" fg:x="36903" fg:w="18191"/><text x="31.5848%" y="287.50">ntdll`RtlLeaveCriticalSe..</text></g><g><title>ntdll`RtlpWakeByAddress (18,163 samples, 15.42%)</title><rect x="31.3586%" y="261" width="15.4224%" height="15" fill="rgb(229,88,8)" fg:x="36931" fg:w="18163"/><text x="31.6086%" y="271.50">ntdll`RtlpWakeByAddress</text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (9,870 samples, 8.38%)</title><rect x="38.4003%" y="245" width="8.3807%" height="15" fill="rgb(213,181,19)" fg:x="45224" fg:w="9870"/><text x="38.6503%" y="255.50">ntdll`RtlpWa..</text></g><g><title>ntdll`NtAlertThreadByThreadId (9,855 samples, 8.37%)</title><rect x="38.4130%" y="229" width="8.3680%" height="15" fill="rgb(254,191,54)" fg:x="45239" fg:w="9855"/><text x="38.6630%" y="239.50">ntdll`NtAler..</text></g><g><title>ntdll`RtlCompareMemoryUlong (30 samples, 0.03%)</title><rect x="46.9695%" y="245" width="0.0255%" height="15" fill="rgb(241,83,37)" fg:x="55316" fg:w="30"/><text x="47.2195%" y="255.50"></text></g><g><title>ntdll`RtlpFindEntry (34 samples, 0.03%)</title><rect x="46.9950%" y="245" width="0.0289%" height="15" fill="rgb(233,36,39)" fg:x="55346" fg:w="34"/><text x="47.2450%" y="255.50"></text></g><g><title>ntdll`RtlpHeapFindListLookupEntry (22 samples, 0.02%)</title><rect x="47.0052%" y="229" width="0.0187%" height="15" fill="rgb(226,3,54)" fg:x="55358" fg:w="22"/><text x="47.2552%" y="239.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (297 samples, 0.25%)</title><rect x="46.7810%" y="277" width="0.2522%" height="15" fill="rgb(245,192,40)" fg:x="55094" fg:w="297"/><text x="47.0310%" y="287.50"></text></g><g><title>ntdll`RtlpAllocateHeap (285 samples, 0.24%)</title><rect x="46.7912%" y="261" width="0.2420%" height="15" fill="rgb(238,167,29)" fg:x="55106" fg:w="285"/><text x="47.0412%" y="271.50"></text></g><g><title>graphics_year2`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;f64,f64,f64&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (54,470 samples, 46.25%)</title><rect x="0.7922%" y="341" width="46.2512%" height="15" fill="rgb(232,182,51)" fg:x="933" fg:w="54470"/><text x="1.0422%" y="351.50">graphics_year2`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;f64,f64,..</text></g><g><title>ntdll`RtlpAllocateHeapInternal (54,439 samples, 46.22%)</title><rect x="0.8185%" y="325" width="46.2248%" height="15" fill="rgb(231,60,39)" fg:x="964" fg:w="54439"/><text x="1.0685%" y="335.50">ntdll`RtlpAllocateHeapInternal</text></g><g><title>ntdll`RtlpAllocateHeap (54,431 samples, 46.22%)</title><rect x="0.8253%" y="309" width="46.2181%" height="15" fill="rgb(208,69,12)" fg:x="972" fg:w="54431"/><text x="1.0753%" y="319.50">ntdll`RtlpAllocateHeap</text></g><g><title>ntdll`RtlDebugAllocateHeap (54,429 samples, 46.22%)</title><rect x="0.8270%" y="293" width="46.2164%" height="15" fill="rgb(235,93,37)" fg:x="974" fg:w="54429"/><text x="1.0770%" y="303.50">ntdll`RtlDebugAllocateHeap</text></g><g><title>graphics_year2`graphics_year2::image::impl$4::fmt (21 samples, 0.02%)</title><rect x="47.0434%" y="325" width="0.0178%" height="15" fill="rgb(213,116,39)" fg:x="55403" fg:w="21"/><text x="47.2934%" y="335.50"></text></g><g><title>graphics_year2`core::fmt::write (21 samples, 0.02%)</title><rect x="47.0434%" y="309" width="0.0178%" height="15" fill="rgb(222,207,29)" fg:x="55403" fg:w="21"/><text x="47.2934%" y="319.50"></text></g><g><title>graphics_year2`graphics_year2::color::impl$1::fmt (17 samples, 0.01%)</title><rect x="47.0468%" y="293" width="0.0144%" height="15" fill="rgb(206,96,30)" fg:x="55407" fg:w="17"/><text x="47.2968%" y="303.50"></text></g><g><title>graphics_year2`core::fmt::write (17 samples, 0.01%)</title><rect x="47.0468%" y="277" width="0.0144%" height="15" fill="rgb(218,138,4)" fg:x="55407" fg:w="17"/><text x="47.2968%" y="287.50"></text></g><g><title>graphics_year2`core::iter::adapters::map::impl$2::try_fold&lt;enum$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;std::error::Error&gt;,alloc::alloc::Global&gt; &gt;, 1, 18446744073709551615, Err&gt;,core::slice::iter::Iter&lt;enum$&lt;core::result::Result&lt;ref_mut$ (31 samples, 0.03%)</title><rect x="47.0434%" y="341" width="0.0263%" height="15" fill="rgb(250,191,14)" fg:x="55403" fg:w="31"/><text x="47.2934%" y="351.50"></text></g><g><title>graphics_year2`alloc::vec::impl$27::drop&lt;alloc::vec::Vec (494 samples, 0.42%)</title><rect x="47.0697%" y="309" width="0.4195%" height="15" fill="rgb(239,60,40)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="319.50"></text></g><g><title>ntdll`RtlFreeHeap (494 samples, 0.42%)</title><rect x="47.0697%" y="293" width="0.4195%" height="15" fill="rgb(206,27,48)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="303.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (494 samples, 0.42%)</title><rect x="47.0697%" y="277" width="0.4195%" height="15" fill="rgb(225,35,8)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="287.50"></text></g><g><title>ntdll`RtlpFreeHeap (494 samples, 0.42%)</title><rect x="47.0697%" y="261" width="0.4195%" height="15" fill="rgb(250,213,24)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="271.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (494 samples, 0.42%)</title><rect x="47.0697%" y="245" width="0.4195%" height="15" fill="rgb(247,123,22)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="255.50"></text></g><g><title>ntdll`RtlFreeHeap (494 samples, 0.42%)</title><rect x="47.0697%" y="229" width="0.4195%" height="15" fill="rgb(231,138,38)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="239.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (494 samples, 0.42%)</title><rect x="47.0697%" y="213" width="0.4195%" height="15" fill="rgb(231,145,46)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="223.50"></text></g><g><title>ntdll`RtlpFreeHeap (494 samples, 0.42%)</title><rect x="47.0697%" y="197" width="0.4195%" height="15" fill="rgb(251,118,11)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="207.50"></text></g><g><title>ntdll`RtlpSecMemFreeVirtualMemory (494 samples, 0.42%)</title><rect x="47.0697%" y="181" width="0.4195%" height="15" fill="rgb(217,147,25)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="191.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (494 samples, 0.42%)</title><rect x="47.0697%" y="165" width="0.4195%" height="15" fill="rgb(247,81,37)" fg:x="55434" fg:w="494"/><text x="47.3197%" y="175.50"></text></g><g><title>graphics_year2`core::iter::adapters::map::impl$2::try_fold&lt;enum$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;std::error::Error&gt;,alloc::alloc::Global&gt; &gt;, 1, 18446744073709551615, Err&gt;,pest::iterators::pairs::Pairs (559 samples, 0.47%)</title><rect x="47.0697%" y="341" width="0.4747%" height="15" fill="rgb(209,12,38)" fg:x="55434" fg:w="559"/><text x="47.3197%" y="351.50"></text></g><g><title>graphics_year2`graphics_year2::parser::Frame::torus&lt;core::iter::adapters::skip::Skip&lt;pest::iterators::pairs::Pairs (559 samples, 0.47%)</title><rect x="47.0697%" y="325" width="0.4747%" height="15" fill="rgb(227,1,9)" fg:x="55434" fg:w="559"/><text x="47.3197%" y="335.50"></text></g><g><title>ntdll`RtlFreeHeap (61 samples, 0.05%)</title><rect x="47.4926%" y="309" width="0.0518%" height="15" fill="rgb(248,47,43)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="319.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (61 samples, 0.05%)</title><rect x="47.4926%" y="293" width="0.0518%" height="15" fill="rgb(221,10,30)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="303.50"></text></g><g><title>ntdll`RtlpFreeHeap (61 samples, 0.05%)</title><rect x="47.4926%" y="277" width="0.0518%" height="15" fill="rgb(210,229,1)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="287.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (61 samples, 0.05%)</title><rect x="47.4926%" y="261" width="0.0518%" height="15" fill="rgb(222,148,37)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="271.50"></text></g><g><title>ntdll`RtlFreeHeap (61 samples, 0.05%)</title><rect x="47.4926%" y="245" width="0.0518%" height="15" fill="rgb(234,67,33)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="255.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (61 samples, 0.05%)</title><rect x="47.4926%" y="229" width="0.0518%" height="15" fill="rgb(247,98,35)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="239.50"></text></g><g><title>ntdll`RtlpFreeHeap (61 samples, 0.05%)</title><rect x="47.4926%" y="213" width="0.0518%" height="15" fill="rgb(247,138,52)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="223.50"></text></g><g><title>ntdll`RtlpSecMemFreeVirtualMemory (61 samples, 0.05%)</title><rect x="47.4926%" y="197" width="0.0518%" height="15" fill="rgb(213,79,30)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="207.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (61 samples, 0.05%)</title><rect x="47.4926%" y="181" width="0.0518%" height="15" fill="rgb(246,177,23)" fg:x="55932" fg:w="61"/><text x="47.7426%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (26 samples, 0.02%)</title><rect x="47.5512%" y="149" width="0.0221%" height="15" fill="rgb(230,62,27)" fg:x="56001" fg:w="26"/><text x="47.8012%" y="159.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (26 samples, 0.02%)</title><rect x="47.5512%" y="133" width="0.0221%" height="15" fill="rgb(216,154,8)" fg:x="56001" fg:w="26"/><text x="47.8012%" y="143.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (40 samples, 0.03%)</title><rect x="47.5512%" y="165" width="0.0340%" height="15" fill="rgb(244,35,45)" fg:x="56001" fg:w="40"/><text x="47.8012%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (14 samples, 0.01%)</title><rect x="47.5732%" y="149" width="0.0119%" height="15" fill="rgb(251,115,12)" fg:x="56027" fg:w="14"/><text x="47.8232%" y="159.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (12 samples, 0.01%)</title><rect x="47.5749%" y="133" width="0.0102%" height="15" fill="rgb(240,54,50)" fg:x="56029" fg:w="12"/><text x="47.8249%" y="143.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (141 samples, 0.12%)</title><rect x="47.5851%" y="165" width="0.1197%" height="15" fill="rgb(233,84,52)" fg:x="56041" fg:w="141"/><text x="47.8351%" y="175.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (141 samples, 0.12%)</title><rect x="47.5851%" y="149" width="0.1197%" height="15" fill="rgb(207,117,47)" fg:x="56041" fg:w="141"/><text x="47.8351%" y="159.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1,629 samples, 1.38%)</title><rect x="47.5452%" y="229" width="1.3832%" height="15" fill="rgb(249,43,39)" fg:x="55994" fg:w="1629"/><text x="47.7952%" y="239.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (1,629 samples, 1.38%)</title><rect x="47.5452%" y="213" width="1.3832%" height="15" fill="rgb(209,38,44)" fg:x="55994" fg:w="1629"/><text x="47.7952%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (1,624 samples, 1.38%)</title><rect x="47.5495%" y="197" width="1.3790%" height="15" fill="rgb(236,212,23)" fg:x="55999" fg:w="1624"/><text x="47.7995%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (1,623 samples, 1.38%)</title><rect x="47.5503%" y="181" width="1.3781%" height="15" fill="rgb(242,79,21)" fg:x="56000" fg:w="1623"/><text x="47.8003%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (1,441 samples, 1.22%)</title><rect x="47.7048%" y="165" width="1.2236%" height="15" fill="rgb(211,96,35)" fg:x="56182" fg:w="1441"/><text x="47.9548%" y="175.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (1,439 samples, 1.22%)</title><rect x="47.7065%" y="149" width="1.2219%" height="15" fill="rgb(253,215,40)" fg:x="56184" fg:w="1439"/><text x="47.9565%" y="159.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (1,342 samples, 1.14%)</title><rect x="48.9284%" y="197" width="1.1395%" height="15" fill="rgb(211,81,21)" fg:x="57623" fg:w="1342"/><text x="49.1784%" y="207.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (1,671 samples, 1.42%)</title><rect x="48.9284%" y="229" width="1.4189%" height="15" fill="rgb(208,190,38)" fg:x="57623" fg:w="1671"/><text x="49.1784%" y="239.50"></text></g><g><title>ntdll`RtlpWakeByAddress (1,671 samples, 1.42%)</title><rect x="48.9284%" y="213" width="1.4189%" height="15" fill="rgb(235,213,38)" fg:x="57623" fg:w="1671"/><text x="49.1784%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (329 samples, 0.28%)</title><rect x="50.0679%" y="197" width="0.2794%" height="15" fill="rgb(237,122,38)" fg:x="58965" fg:w="329"/><text x="50.3179%" y="207.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (329 samples, 0.28%)</title><rect x="50.0679%" y="181" width="0.2794%" height="15" fill="rgb(244,218,35)" fg:x="58965" fg:w="329"/><text x="50.3179%" y="191.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (78 samples, 0.07%)</title><rect x="50.3600%" y="69" width="0.0662%" height="15" fill="rgb(240,68,47)" fg:x="59309" fg:w="78"/><text x="50.6100%" y="79.50"></text></g><g><title>ntdll`RtlpFindAndCommitPages (141 samples, 0.12%)</title><rect x="50.3600%" y="85" width="0.1197%" height="15" fill="rgb(210,16,53)" fg:x="59309" fg:w="141"/><text x="50.6100%" y="95.50"></text></g><g><title>ntdll`RtlpCreateUCREntry (63 samples, 0.05%)</title><rect x="50.4263%" y="69" width="0.0535%" height="15" fill="rgb(235,124,12)" fg:x="59387" fg:w="63"/><text x="50.6763%" y="79.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (151 samples, 0.13%)</title><rect x="50.3524%" y="181" width="0.1282%" height="15" fill="rgb(224,169,11)" fg:x="59300" fg:w="151"/><text x="50.6024%" y="191.50"></text></g><g><title>ntdll`RtlpAllocateHeap (151 samples, 0.13%)</title><rect x="50.3524%" y="165" width="0.1282%" height="15" fill="rgb(250,166,2)" fg:x="59300" fg:w="151"/><text x="50.6024%" y="175.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (151 samples, 0.13%)</title><rect x="50.3524%" y="149" width="0.1282%" height="15" fill="rgb(242,216,29)" fg:x="59300" fg:w="151"/><text x="50.6024%" y="159.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (151 samples, 0.13%)</title><rect x="50.3524%" y="133" width="0.1282%" height="15" fill="rgb(230,116,27)" fg:x="59300" fg:w="151"/><text x="50.6024%" y="143.50"></text></g><g><title>ntdll`RtlpAllocateHeap (150 samples, 0.13%)</title><rect x="50.3532%" y="117" width="0.1274%" height="15" fill="rgb(228,99,48)" fg:x="59301" fg:w="150"/><text x="50.6032%" y="127.50"></text></g><g><title>ntdll`RtlpExtendHeap (142 samples, 0.12%)</title><rect x="50.3600%" y="101" width="0.1206%" height="15" fill="rgb(253,11,6)" fg:x="59309" fg:w="142"/><text x="50.6100%" y="111.50"></text></g><g><title>ntdll`RtlCompareMemoryUlong (66 samples, 0.06%)</title><rect x="50.4806%" y="165" width="0.0560%" height="15" fill="rgb(247,143,39)" fg:x="59451" fg:w="66"/><text x="50.7306%" y="175.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3,529 samples, 3.00%)</title><rect x="47.5452%" y="293" width="2.9965%" height="15" fill="rgb(236,97,10)" fg:x="55994" fg:w="3529"/><text x="47.7952%" y="303.50">ntd..</text></g><g><title>ntdll`RtlpReAllocateHeapInternal (3,529 samples, 3.00%)</title><rect x="47.5452%" y="277" width="2.9965%" height="15" fill="rgb(233,208,19)" fg:x="55994" fg:w="3529"/><text x="47.7952%" y="287.50">ntd..</text></g><g><title>ntdll`RtlpReAllocateHeap (3,529 samples, 3.00%)</title><rect x="47.5452%" y="261" width="2.9965%" height="15" fill="rgb(216,164,2)" fg:x="55994" fg:w="3529"/><text x="47.7952%" y="271.50">ntd..</text></g><g><title>ntdll`RtlDebugReAllocateHeap (3,529 samples, 3.00%)</title><rect x="47.5452%" y="245" width="2.9965%" height="15" fill="rgb(220,129,5)" fg:x="55994" fg:w="3529"/><text x="47.7952%" y="255.50">ntd..</text></g><g><title>ntdll`RtlReAllocateHeap (229 samples, 0.19%)</title><rect x="50.3473%" y="229" width="0.1944%" height="15" fill="rgb(242,17,10)" fg:x="59294" fg:w="229"/><text x="50.5973%" y="239.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (229 samples, 0.19%)</title><rect x="50.3473%" y="213" width="0.1944%" height="15" fill="rgb(242,107,0)" fg:x="59294" fg:w="229"/><text x="50.5973%" y="223.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (228 samples, 0.19%)</title><rect x="50.3481%" y="197" width="0.1936%" height="15" fill="rgb(251,28,31)" fg:x="59295" fg:w="228"/><text x="50.5981%" y="207.50"></text></g><g><title>ntdll`RtlpGrowBlockInPlace (72 samples, 0.06%)</title><rect x="50.4806%" y="181" width="0.0611%" height="15" fill="rgb(233,223,10)" fg:x="59451" fg:w="72"/><text x="50.7306%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (18 samples, 0.02%)</title><rect x="50.5468%" y="181" width="0.0153%" height="15" fill="rgb(215,21,27)" fg:x="59529" fg:w="18"/><text x="50.7968%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (92 samples, 0.08%)</title><rect x="50.5621%" y="181" width="0.0781%" height="15" fill="rgb(232,23,21)" fg:x="59547" fg:w="92"/><text x="50.8121%" y="191.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (91 samples, 0.08%)</title><rect x="50.5630%" y="165" width="0.0773%" height="15" fill="rgb(244,5,23)" fg:x="59548" fg:w="91"/><text x="50.8130%" y="175.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1,718 samples, 1.46%)</title><rect x="50.5417%" y="245" width="1.4588%" height="15" fill="rgb(226,81,46)" fg:x="59523" fg:w="1718"/><text x="50.7917%" y="255.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (1,718 samples, 1.46%)</title><rect x="50.5417%" y="229" width="1.4588%" height="15" fill="rgb(247,70,30)" fg:x="59523" fg:w="1718"/><text x="50.7917%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (1,715 samples, 1.46%)</title><rect x="50.5443%" y="213" width="1.4562%" height="15" fill="rgb(212,68,19)" fg:x="59526" fg:w="1715"/><text x="50.7943%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (1,713 samples, 1.45%)</title><rect x="50.5460%" y="197" width="1.4545%" height="15" fill="rgb(240,187,13)" fg:x="59528" fg:w="1713"/><text x="50.7960%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (1,602 samples, 1.36%)</title><rect x="50.6402%" y="181" width="1.3603%" height="15" fill="rgb(223,113,26)" fg:x="59639" fg:w="1602"/><text x="50.8902%" y="191.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (1,601 samples, 1.36%)</title><rect x="50.6411%" y="165" width="1.3594%" height="15" fill="rgb(206,192,2)" fg:x="59640" fg:w="1601"/><text x="50.8911%" y="175.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (465 samples, 0.39%)</title><rect x="52.0014%" y="213" width="0.3948%" height="15" fill="rgb(241,108,4)" fg:x="61242" fg:w="465"/><text x="52.2514%" y="223.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (554 samples, 0.47%)</title><rect x="52.0005%" y="245" width="0.4704%" height="15" fill="rgb(247,173,49)" fg:x="61241" fg:w="554"/><text x="52.2505%" y="255.50"></text></g><g><title>ntdll`RtlpWakeByAddress (554 samples, 0.47%)</title><rect x="52.0005%" y="229" width="0.4704%" height="15" fill="rgb(224,114,35)" fg:x="61241" fg:w="554"/><text x="52.2505%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (88 samples, 0.07%)</title><rect x="52.3962%" y="213" width="0.0747%" height="15" fill="rgb(245,159,27)" fg:x="61707" fg:w="88"/><text x="52.6462%" y="223.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (88 samples, 0.07%)</title><rect x="52.3962%" y="197" width="0.0747%" height="15" fill="rgb(245,172,44)" fg:x="61707" fg:w="88"/><text x="52.6462%" y="207.50"></text></g><g><title>ntdll`RtlCompareMemoryUlong (30 samples, 0.03%)</title><rect x="52.4752%" y="213" width="0.0255%" height="15" fill="rgb(236,23,11)" fg:x="61800" fg:w="30"/><text x="52.7252%" y="223.50"></text></g><g><title>ntdll`RtlpExtendHeap (19 samples, 0.02%)</title><rect x="52.5006%" y="213" width="0.0161%" height="15" fill="rgb(205,117,38)" fg:x="61830" fg:w="19"/><text x="52.7506%" y="223.50"></text></g><g><title>ntdll`RtlpFindAndCommitPages (19 samples, 0.02%)</title><rect x="52.5006%" y="197" width="0.0161%" height="15" fill="rgb(237,72,25)" fg:x="61830" fg:w="19"/><text x="52.7506%" y="207.50"></text></g><g><title>graphics_year2`core::iter::adapters::map::impl$2::try_fold&lt;tuple$&lt;f64,f64,f64&gt;,core::ops::range::Range&lt;usize&gt;,ref$&lt;graphics_year2::shapes3d::torus::impl$0::generate_torus::closure$0::closure_env$0&gt;,alloc::vec::Vec&lt;tuple$ (5,857 samples, 4.97%)</title><rect x="47.5444%" y="341" width="4.9733%" height="15" fill="rgb(244,70,9)" fg:x="55993" fg:w="5857"/><text x="47.7944%" y="351.50">graphi..</text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken&lt;graphics_year2::parser::Rule&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken (5,856 samples, 4.97%)</title><rect x="47.5452%" y="325" width="4.9724%" height="15" fill="rgb(217,125,39)" fg:x="55994" fg:w="5856"/><text x="47.7952%" y="335.50">graphi..</text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (5,856 samples, 4.97%)</title><rect x="47.5452%" y="309" width="4.9724%" height="15" fill="rgb(235,36,10)" fg:x="55994" fg:w="5856"/><text x="47.7952%" y="319.50">graphi..</text></g><g><title>ntdll`RtlpAllocateHeapInternal (2,327 samples, 1.98%)</title><rect x="50.5417%" y="293" width="1.9759%" height="15" fill="rgb(251,123,47)" fg:x="59523" fg:w="2327"/><text x="50.7917%" y="303.50">n..</text></g><g><title>ntdll`RtlpAllocateHeap (2,327 samples, 1.98%)</title><rect x="50.5417%" y="277" width="1.9759%" height="15" fill="rgb(221,13,13)" fg:x="59523" fg:w="2327"/><text x="50.7917%" y="287.50">n..</text></g><g><title>ntdll`RtlDebugAllocateHeap (2,327 samples, 1.98%)</title><rect x="50.5417%" y="261" width="1.9759%" height="15" fill="rgb(238,131,9)" fg:x="59523" fg:w="2327"/><text x="50.7917%" y="271.50">n..</text></g><g><title>ntdll`RtlpAllocateHeapInternal (55 samples, 0.05%)</title><rect x="52.4709%" y="245" width="0.0467%" height="15" fill="rgb(211,50,8)" fg:x="61795" fg:w="55"/><text x="52.7209%" y="255.50"></text></g><g><title>ntdll`RtlpAllocateHeap (55 samples, 0.05%)</title><rect x="52.4709%" y="229" width="0.0467%" height="15" fill="rgb(245,182,24)" fg:x="61795" fg:w="55"/><text x="52.7209%" y="239.50"></text></g><g><title>ntdll`RtlpAddWaitBlockToWaitList (40 samples, 0.03%)</title><rect x="52.9023%" y="197" width="0.0340%" height="15" fill="rgb(242,14,37)" fg:x="62303" fg:w="40"/><text x="53.1523%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (915 samples, 0.78%)</title><rect x="52.9651%" y="181" width="0.7769%" height="15" fill="rgb(246,228,12)" fg:x="62377" fg:w="915"/><text x="53.2151%" y="191.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (914 samples, 0.78%)</title><rect x="52.9660%" y="165" width="0.7761%" height="15" fill="rgb(213,55,15)" fg:x="62378" fg:w="914"/><text x="53.2160%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (2,568 samples, 2.18%)</title><rect x="52.9362%" y="197" width="2.1805%" height="15" fill="rgb(209,9,3)" fg:x="62343" fg:w="2568"/><text x="53.1862%" y="207.50">n..</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (1,619 samples, 1.37%)</title><rect x="53.7420%" y="181" width="1.3747%" height="15" fill="rgb(230,59,30)" fg:x="63292" fg:w="1619"/><text x="53.9920%" y="191.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (1,514 samples, 1.29%)</title><rect x="53.8312%" y="165" width="1.2856%" height="15" fill="rgb(209,121,21)" fg:x="63397" fg:w="1514"/><text x="54.0812%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (7,631 samples, 6.48%)</title><rect x="55.1168%" y="197" width="6.4796%" height="15" fill="rgb(220,109,13)" fg:x="64911" fg:w="7631"/><text x="55.3668%" y="207.50">ntdll`Rt..</text></g><g><title>ntdll`NtAlertThreadByThreadId (7,621 samples, 6.47%)</title><rect x="55.1252%" y="181" width="6.4711%" height="15" fill="rgb(232,18,1)" fg:x="64921" fg:w="7621"/><text x="55.3752%" y="191.50">ntdll`Nt..</text></g><g><title>ntdll`RtlEnterCriticalSection (35,339 samples, 30.01%)</title><rect x="52.5609%" y="261" width="30.0068%" height="15" fill="rgb(215,41,42)" fg:x="61901" fg:w="35339"/><text x="52.8109%" y="271.50">ntdll`RtlEnterCriticalSection</text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (35,312 samples, 29.98%)</title><rect x="52.5838%" y="245" width="29.9839%" height="15" fill="rgb(224,123,36)" fg:x="61928" fg:w="35312"/><text x="52.8338%" y="255.50">ntdll`RtlpEnterCriticalSectionContended</text></g><g><title>ntdll`RtlpWaitOnCriticalSection (35,021 samples, 29.74%)</title><rect x="52.8309%" y="229" width="29.7368%" height="15" fill="rgb(240,125,3)" fg:x="62219" fg:w="35021"/><text x="53.0809%" y="239.50">ntdll`RtlpWaitOnCriticalSection</text></g><g><title>ntdll`RtlpWaitOnAddress (34,976 samples, 29.70%)</title><rect x="52.8692%" y="213" width="29.6986%" height="15" fill="rgb(205,98,50)" fg:x="62264" fg:w="34976"/><text x="53.1192%" y="223.50">ntdll`RtlpWaitOnAddress</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (24,698 samples, 20.97%)</title><rect x="61.5963%" y="197" width="20.9714%" height="15" fill="rgb(205,185,37)" fg:x="72542" fg:w="24698"/><text x="61.8463%" y="207.50">ntdll`RtlpWaitOnAddressWithTimeout</text></g><g><title>ntdll`NtWaitForAlertByThreadId (24,640 samples, 20.92%)</title><rect x="61.6456%" y="181" width="20.9221%" height="15" fill="rgb(238,207,15)" fg:x="72600" fg:w="24640"/><text x="61.8956%" y="191.50">ntdll`NtWaitForAlertByThreadId</text></g><g><title>ntdll`RtlCompareMemoryUlong (70 samples, 0.06%)</title><rect x="82.7121%" y="213" width="0.0594%" height="15" fill="rgb(213,199,42)" fg:x="97410" fg:w="70"/><text x="82.9621%" y="223.50"></text></g><g><title>ntdll`RtlpFindEntry (45 samples, 0.04%)</title><rect x="82.7774%" y="213" width="0.0382%" height="15" fill="rgb(235,201,11)" fg:x="97487" fg:w="45"/><text x="83.0274%" y="223.50"></text></g><g><title>ntdll`RtlpHeapFindListLookupEntry (34 samples, 0.03%)</title><rect x="82.7868%" y="197" width="0.0289%" height="15" fill="rgb(207,46,11)" fg:x="97498" fg:w="34"/><text x="83.0368%" y="207.50"></text></g><g><title>ntdll`RtlpFreeHeap (303 samples, 0.26%)</title><rect x="82.5728%" y="229" width="0.2573%" height="15" fill="rgb(241,35,35)" fg:x="97246" fg:w="303"/><text x="82.8228%" y="239.50"></text></g><g><title>ntdll`RtlpHeapRemoveListEntry (13 samples, 0.01%)</title><rect x="82.8191%" y="213" width="0.0110%" height="15" fill="rgb(243,32,47)" fg:x="97536" fg:w="13"/><text x="83.0691%" y="223.50"></text></g><g><title>ntdll`RtlFreeHeap (310 samples, 0.26%)</title><rect x="82.5677%" y="261" width="0.2632%" height="15" fill="rgb(247,202,23)" fg:x="97240" fg:w="310"/><text x="82.8177%" y="271.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (308 samples, 0.26%)</title><rect x="82.5694%" y="245" width="0.2615%" height="15" fill="rgb(219,102,11)" fg:x="97242" fg:w="308"/><text x="82.8194%" y="255.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (8,184 samples, 6.95%)</title><rect x="82.8946%" y="229" width="6.9491%" height="15" fill="rgb(243,110,44)" fg:x="97625" fg:w="8184"/><text x="83.1446%" y="239.50">ntdll`NtA..</text></g><g><title>ntdll`RtlLeaveCriticalSection (17,070 samples, 14.49%)</title><rect x="82.8309%" y="261" width="14.4944%" height="15" fill="rgb(222,74,54)" fg:x="97550" fg:w="17070"/><text x="83.0809%" y="271.50">ntdll`RtlLeaveCritical..</text></g><g><title>ntdll`RtlpWakeByAddress (17,034 samples, 14.46%)</title><rect x="82.8615%" y="245" width="14.4638%" height="15" fill="rgb(216,99,12)" fg:x="97586" fg:w="17034"/><text x="83.1115%" y="255.50">ntdll`RtlpWakeByAddress</text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (8,811 samples, 7.48%)</title><rect x="89.8438%" y="229" width="7.4815%" height="15" fill="rgb(226,22,26)" fg:x="105809" fg:w="8811"/><text x="90.0938%" y="239.50">ntdll`Rtlp..</text></g><g><title>ntdll`NtAlertThreadByThreadId (8,801 samples, 7.47%)</title><rect x="89.8523%" y="213" width="7.4730%" height="15" fill="rgb(217,163,10)" fg:x="105819" fg:w="8801"/><text x="90.1023%" y="223.50">ntdll`NtAl..</text></g><g><title>ntdll`RtlpValidateHeap (15 samples, 0.01%)</title><rect x="97.3329%" y="261" width="0.0127%" height="15" fill="rgb(213,25,53)" fg:x="114629" fg:w="15"/><text x="97.5829%" y="271.50"></text></g><g><title>ntdll`RtlpValidateHeapEntry (70 samples, 0.06%)</title><rect x="97.3457%" y="261" width="0.0594%" height="15" fill="rgb(252,105,26)" fg:x="114644" fg:w="70"/><text x="97.5957%" y="271.50"></text></g><g><title>ntdll`RtlpCheckBusyBlockTail (18 samples, 0.02%)</title><rect x="97.3898%" y="245" width="0.0153%" height="15" fill="rgb(220,39,43)" fg:x="114696" fg:w="18"/><text x="97.6398%" y="255.50"></text></g><g><title>ntdll`RtlCompareMemory (13 samples, 0.01%)</title><rect x="97.3941%" y="229" width="0.0110%" height="15" fill="rgb(229,68,48)" fg:x="114701" fg:w="13"/><text x="97.6441%" y="239.50"></text></g><g><title>ntdll`RtlpFreeHeap (52,839 samples, 44.87%)</title><rect x="52.5414%" y="293" width="44.8663%" height="15" fill="rgb(252,8,32)" fg:x="61878" fg:w="52839"/><text x="52.7914%" y="303.50">ntdll`RtlpFreeHeap</text></g><g><title>ntdll`RtlDebugFreeHeap (52,834 samples, 44.86%)</title><rect x="52.5456%" y="277" width="44.8620%" height="15" fill="rgb(223,20,43)" fg:x="61883" fg:w="52834"/><text x="52.7956%" y="287.50">ntdll`RtlDebugFreeHeap</text></g><g><title>graphics_year2`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;alloc::vec::Vec&lt;tuple$ (52,863 samples, 44.89%)</title><rect x="52.5219%" y="341" width="44.8866%" height="15" fill="rgb(229,81,49)" fg:x="61855" fg:w="52863"/><text x="52.7719%" y="351.50">graphics_year2`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;alloc::..</text></g><g><title>ntdll`RtlFreeHeap (52,853 samples, 44.88%)</title><rect x="52.5304%" y="325" width="44.8782%" height="15" fill="rgb(236,28,36)" fg:x="61865" fg:w="52853"/><text x="52.7804%" y="335.50">ntdll`RtlFreeHeap</text></g><g><title>ntdll`RtlpFreeHeapInternal (52,849 samples, 44.87%)</title><rect x="52.5338%" y="309" width="44.8748%" height="15" fill="rgb(249,185,26)" fg:x="61869" fg:w="52849"/><text x="52.7838%" y="319.50">ntdll`RtlpFreeHeapInternal</text></g><g><title>ntdll`RtlFreeHeap (483 samples, 0.41%)</title><rect x="97.7388%" y="165" width="0.4101%" height="15" fill="rgb(249,174,33)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="175.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (483 samples, 0.41%)</title><rect x="97.7388%" y="149" width="0.4101%" height="15" fill="rgb(233,201,37)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="159.50"></text></g><g><title>ntdll`RtlpFreeHeap (483 samples, 0.41%)</title><rect x="97.7388%" y="133" width="0.4101%" height="15" fill="rgb(221,78,26)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="143.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (483 samples, 0.41%)</title><rect x="97.7388%" y="117" width="0.4101%" height="15" fill="rgb(250,127,30)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="127.50"></text></g><g><title>ntdll`RtlFreeHeap (483 samples, 0.41%)</title><rect x="97.7388%" y="101" width="0.4101%" height="15" fill="rgb(230,49,44)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="111.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (483 samples, 0.41%)</title><rect x="97.7388%" y="85" width="0.4101%" height="15" fill="rgb(229,67,23)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="95.50"></text></g><g><title>ntdll`RtlpFreeHeap (483 samples, 0.41%)</title><rect x="97.7388%" y="69" width="0.4101%" height="15" fill="rgb(249,83,47)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="79.50"></text></g><g><title>ntdll`RtlpSecMemFreeVirtualMemory (483 samples, 0.41%)</title><rect x="97.7388%" y="53" width="0.4101%" height="15" fill="rgb(215,43,3)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="63.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (483 samples, 0.41%)</title><rect x="97.7388%" y="37" width="0.4101%" height="15" fill="rgb(238,154,13)" fg:x="115107" fg:w="483"/><text x="97.9888%" y="47.50"></text></g><g><title>graphics_year2`graphics_year2::matrix::dynamic_2d::Dynamic2D&lt;f64&gt;::add_col&lt;f64,core::array::iter::IntoIter (1,485 samples, 1.26%)</title><rect x="97.4238%" y="325" width="1.2609%" height="15" fill="rgb(219,56,2)" fg:x="114736" fg:w="1485"/><text x="97.6738%" y="335.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve_for_push (1,114 samples, 0.95%)</title><rect x="97.7388%" y="309" width="0.9459%" height="15" fill="rgb(233,0,4)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="319.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (1,114 samples, 0.95%)</title><rect x="97.7388%" y="293" width="0.9459%" height="15" fill="rgb(235,30,7)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1,114 samples, 0.95%)</title><rect x="97.7388%" y="277" width="0.9459%" height="15" fill="rgb(250,79,13)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="287.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (1,114 samples, 0.95%)</title><rect x="97.7388%" y="261" width="0.9459%" height="15" fill="rgb(211,146,34)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="271.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (1,114 samples, 0.95%)</title><rect x="97.7388%" y="245" width="0.9459%" height="15" fill="rgb(228,22,38)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="255.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (1,114 samples, 0.95%)</title><rect x="97.7388%" y="229" width="0.9459%" height="15" fill="rgb(235,168,5)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="239.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1,114 samples, 0.95%)</title><rect x="97.7388%" y="213" width="0.9459%" height="15" fill="rgb(221,155,16)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="223.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (1,114 samples, 0.95%)</title><rect x="97.7388%" y="197" width="0.9459%" height="15" fill="rgb(215,215,53)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="207.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (1,114 samples, 0.95%)</title><rect x="97.7388%" y="181" width="0.9459%" height="15" fill="rgb(223,4,10)" fg:x="115107" fg:w="1114"/><text x="97.9888%" y="191.50"></text></g><g><title>ntdll`memcpy (623 samples, 0.53%)</title><rect x="98.1557%" y="165" width="0.5290%" height="15" fill="rgb(234,103,6)" fg:x="115598" fg:w="623"/><text x="98.4057%" y="175.50"></text></g><g><title>graphics_year2`graphics_year2::shapes3d::torus::Torus::add_to_matrix (1,519 samples, 1.29%)</title><rect x="97.4238%" y="341" width="1.2898%" height="15" fill="rgb(227,97,0)" fg:x="114736" fg:w="1519"/><text x="97.6738%" y="351.50"></text></g><g><title>ntdll`RtlFreeHeap (34 samples, 0.03%)</title><rect x="98.6847%" y="325" width="0.0289%" height="15" fill="rgb(234,150,53)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="335.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (34 samples, 0.03%)</title><rect x="98.6847%" y="309" width="0.0289%" height="15" fill="rgb(228,201,54)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="319.50"></text></g><g><title>ntdll`RtlpFreeHeap (34 samples, 0.03%)</title><rect x="98.6847%" y="293" width="0.0289%" height="15" fill="rgb(222,22,37)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="303.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (34 samples, 0.03%)</title><rect x="98.6847%" y="277" width="0.0289%" height="15" fill="rgb(237,53,32)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (34 samples, 0.03%)</title><rect x="98.6847%" y="261" width="0.0289%" height="15" fill="rgb(233,25,53)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="271.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (34 samples, 0.03%)</title><rect x="98.6847%" y="245" width="0.0289%" height="15" fill="rgb(210,40,34)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="255.50"></text></g><g><title>ntdll`RtlpFreeHeap (34 samples, 0.03%)</title><rect x="98.6847%" y="229" width="0.0289%" height="15" fill="rgb(241,220,44)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="239.50"></text></g><g><title>ntdll`RtlpSecMemFreeVirtualMemory (34 samples, 0.03%)</title><rect x="98.6847%" y="213" width="0.0289%" height="15" fill="rgb(235,28,35)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="223.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (34 samples, 0.03%)</title><rect x="98.6847%" y="197" width="0.0289%" height="15" fill="rgb(210,56,17)" fg:x="116221" fg:w="34"/><text x="98.9347%" y="207.50"></text></g><g><title>graphics_year2`rayon::iter::collect::impl$1::par_extend&lt;tuple$&lt;f64,f64,f64&gt;,rayon::iter::flat_map::FlatMap&lt;rayon::range_inclusive::Iter (17 samples, 0.01%)</title><rect x="98.7144%" y="341" width="0.0144%" height="15" fill="rgb(224,130,29)" fg:x="116256" fg:w="17"/><text x="98.9644%" y="351.50"></text></g><g><title>ntdll`RtlFreeHeap (16 samples, 0.01%)</title><rect x="98.7153%" y="325" width="0.0136%" height="15" fill="rgb(235,212,8)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="335.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (16 samples, 0.01%)</title><rect x="98.7153%" y="309" width="0.0136%" height="15" fill="rgb(223,33,50)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="319.50"></text></g><g><title>ntdll`RtlpFreeHeap (16 samples, 0.01%)</title><rect x="98.7153%" y="293" width="0.0136%" height="15" fill="rgb(219,149,13)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="303.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (16 samples, 0.01%)</title><rect x="98.7153%" y="277" width="0.0136%" height="15" fill="rgb(250,156,29)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (16 samples, 0.01%)</title><rect x="98.7153%" y="261" width="0.0136%" height="15" fill="rgb(216,193,19)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="271.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (16 samples, 0.01%)</title><rect x="98.7153%" y="245" width="0.0136%" height="15" fill="rgb(216,135,14)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="255.50"></text></g><g><title>ntdll`RtlpFreeHeap (16 samples, 0.01%)</title><rect x="98.7153%" y="229" width="0.0136%" height="15" fill="rgb(241,47,5)" fg:x="116257" fg:w="16"/><text x="98.9653%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (81 samples, 0.07%)</title><rect x="98.7374%" y="213" width="0.0688%" height="15" fill="rgb(233,42,35)" fg:x="116283" fg:w="81"/><text x="98.9874%" y="223.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (81 samples, 0.07%)</title><rect x="98.7374%" y="197" width="0.0688%" height="15" fill="rgb(231,13,6)" fg:x="116283" fg:w="81"/><text x="98.9874%" y="207.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (558 samples, 0.47%)</title><rect x="98.7306%" y="277" width="0.4738%" height="15" fill="rgb(207,181,40)" fg:x="116275" fg:w="558"/><text x="98.9806%" y="287.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (558 samples, 0.47%)</title><rect x="98.7306%" y="261" width="0.4738%" height="15" fill="rgb(254,173,49)" fg:x="116275" fg:w="558"/><text x="98.9806%" y="271.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (558 samples, 0.47%)</title><rect x="98.7306%" y="245" width="0.4738%" height="15" fill="rgb(221,1,38)" fg:x="116275" fg:w="558"/><text x="98.9806%" y="255.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (558 samples, 0.47%)</title><rect x="98.7306%" y="229" width="0.4738%" height="15" fill="rgb(206,124,46)" fg:x="116275" fg:w="558"/><text x="98.9806%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (469 samples, 0.40%)</title><rect x="98.8061%" y="213" width="0.3982%" height="15" fill="rgb(249,21,11)" fg:x="116364" fg:w="469"/><text x="99.0561%" y="223.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (469 samples, 0.40%)</title><rect x="98.8061%" y="197" width="0.3982%" height="15" fill="rgb(222,201,40)" fg:x="116364" fg:w="469"/><text x="99.0561%" y="207.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (406 samples, 0.34%)</title><rect x="99.2044%" y="245" width="0.3447%" height="15" fill="rgb(235,61,29)" fg:x="116833" fg:w="406"/><text x="99.4544%" y="255.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (473 samples, 0.40%)</title><rect x="99.2044%" y="277" width="0.4016%" height="15" fill="rgb(219,207,3)" fg:x="116833" fg:w="473"/><text x="99.4544%" y="287.50"></text></g><g><title>ntdll`RtlpWakeByAddress (473 samples, 0.40%)</title><rect x="99.2044%" y="261" width="0.4016%" height="15" fill="rgb(222,56,46)" fg:x="116833" fg:w="473"/><text x="99.4544%" y="271.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (67 samples, 0.06%)</title><rect x="99.5491%" y="245" width="0.0569%" height="15" fill="rgb(239,76,54)" fg:x="117239" fg:w="67"/><text x="99.7991%" y="255.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (67 samples, 0.06%)</title><rect x="99.5491%" y="229" width="0.0569%" height="15" fill="rgb(231,124,27)" fg:x="117239" fg:w="67"/><text x="99.7991%" y="239.50"></text></g><g><title>ntdll`RtlCompareMemoryUlong (28 samples, 0.02%)</title><rect x="99.6094%" y="245" width="0.0238%" height="15" fill="rgb(249,195,6)" fg:x="117310" fg:w="28"/><text x="99.8594%" y="255.50"></text></g><g><title>graphics_year2`rayon::iter::map::impl$8::complete&lt;usize,tuple$&lt;f64,f64,f64&gt;,rayon::iter::fold::FoldFolder&lt;rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;f64,f64,f64&gt;,alloc::alloc::Global&gt; &gt;  (1,073 samples, 0.91%)</title><rect x="98.7306%" y="341" width="0.9111%" height="15" fill="rgb(237,174,47)" fg:x="116275" fg:w="1073"/><text x="98.9806%" y="351.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (1,073 samples, 0.91%)</title><rect x="98.7306%" y="325" width="0.9111%" height="15" fill="rgb(206,201,31)" fg:x="116275" fg:w="1073"/><text x="98.9806%" y="335.50"></text></g><g><title>ntdll`RtlpAllocateHeap (1,073 samples, 0.91%)</title><rect x="98.7306%" y="309" width="0.9111%" height="15" fill="rgb(231,57,52)" fg:x="116275" fg:w="1073"/><text x="98.9806%" y="319.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (1,073 samples, 0.91%)</title><rect x="98.7306%" y="293" width="0.9111%" height="15" fill="rgb(248,177,22)" fg:x="116275" fg:w="1073"/><text x="98.9806%" y="303.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (42 samples, 0.04%)</title><rect x="99.6060%" y="277" width="0.0357%" height="15" fill="rgb(215,211,37)" fg:x="117306" fg:w="42"/><text x="99.8560%" y="287.50"></text></g><g><title>ntdll`RtlpAllocateHeap (42 samples, 0.04%)</title><rect x="99.6060%" y="261" width="0.0357%" height="15" fill="rgb(241,128,51)" fg:x="117306" fg:w="42"/><text x="99.8560%" y="271.50"></text></g><g><title>graphics_year2`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult (173 samples, 0.15%)</title><rect x="99.6425%" y="341" width="0.1469%" height="15" fill="rgb(227,165,31)" fg:x="117349" fg:w="173"/><text x="99.8925%" y="351.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (173 samples, 0.15%)</title><rect x="99.6425%" y="325" width="0.1469%" height="15" fill="rgb(228,167,24)" fg:x="117349" fg:w="173"/><text x="99.8925%" y="335.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::Producer::fold_with&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (173 samples, 0.15%)</title><rect x="99.6425%" y="309" width="0.1469%" height="15" fill="rgb(228,143,12)" fg:x="117349" fg:w="173"/><text x="99.8925%" y="319.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (226 samples, 0.19%)</title><rect x="99.7911%" y="325" width="0.1919%" height="15" fill="rgb(249,149,8)" fg:x="117524" fg:w="226"/><text x="100.0411%" y="335.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::Producer::fold_with&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (226 samples, 0.19%)</title><rect x="99.7911%" y="309" width="0.1919%" height="15" fill="rgb(243,35,44)" fg:x="117524" fg:w="226"/><text x="100.0411%" y="319.50"></text></g><g><title>graphics_year2`rayon::iter::chunks::impl$4::next&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer&lt;f64&gt; &gt;,rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (12 samples, 0.01%)</title><rect x="99.9728%" y="293" width="0.0102%" height="15" fill="rgb(246,89,9)" fg:x="117738" fg:w="12"/><text x="100.2228%" y="303.50"></text></g><g><title>graphics_year2`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer (228 samples, 0.19%)</title><rect x="99.7903%" y="341" width="0.1936%" height="15" fill="rgb(233,213,13)" fg:x="117523" fg:w="228"/><text x="100.0403%" y="351.50"></text></g><g><title>all (117,770 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="117770"/><text x="0.2500%" y="367.50"></text></g></svg></svg>