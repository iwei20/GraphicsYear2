<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="389.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="116415"><g><title>graphics_year2`crossbeam_deque::deque::Injector&lt;rayon_core::job::JobRef&gt;::steal (413 samples, 0.35%)</title><rect x="0.4879%" y="245" width="0.3548%" height="15" fill="rgb(227,0,7)" fg:x="568" fg:w="413"/><text x="0.7379%" y="255.50"></text></g><g><title>graphics_year2`crossbeam_deque::deque::Worker&lt;rayon_core::job::JobRef&gt;::pop (79 samples, 0.07%)</title><rect x="0.8427%" y="245" width="0.0679%" height="15" fill="rgb(217,0,24)" fg:x="981" fg:w="79"/><text x="1.0927%" y="255.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::sleep (47 samples, 0.04%)</title><rect x="0.9105%" y="245" width="0.0404%" height="15" fill="rgb(221,193,54)" fg:x="1060" fg:w="47"/><text x="1.1605%" y="255.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (28 samples, 0.02%)</title><rect x="0.9999%" y="197" width="0.0241%" height="15" fill="rgb(248,212,6)" fg:x="1164" fg:w="28"/><text x="1.2499%" y="207.50"></text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (96 samples, 0.08%)</title><rect x="0.9578%" y="213" width="0.0825%" height="15" fill="rgb(208,68,35)" fg:x="1115" fg:w="96"/><text x="1.2078%" y="223.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (19 samples, 0.02%)</title><rect x="1.0239%" y="197" width="0.0163%" height="15" fill="rgb(232,128,0)" fg:x="1192" fg:w="19"/><text x="1.2739%" y="207.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (19 samples, 0.02%)</title><rect x="1.0239%" y="181" width="0.0163%" height="15" fill="rgb(207,160,47)" fg:x="1192" fg:w="19"/><text x="1.2739%" y="191.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_any_threads (1,309 samples, 1.12%)</title><rect x="0.9509%" y="245" width="1.1244%" height="15" fill="rgb(228,23,34)" fg:x="1107" fg:w="1309"/><text x="1.2009%" y="255.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_specific_thread (1,307 samples, 1.12%)</title><rect x="0.9526%" y="229" width="1.1227%" height="15" fill="rgb(218,30,26)" fg:x="1109" fg:w="1307"/><text x="1.2026%" y="239.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (1,200 samples, 1.03%)</title><rect x="1.0445%" y="213" width="1.0308%" height="15" fill="rgb(220,122,19)" fg:x="1216" fg:w="1200"/><text x="1.2945%" y="223.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (1,196 samples, 1.03%)</title><rect x="1.0480%" y="197" width="1.0274%" height="15" fill="rgb(250,228,42)" fg:x="1220" fg:w="1196"/><text x="1.2980%" y="207.50"></text></g><g><title>KERNEL32`BaseThreadInitThunk (2,371 samples, 2.04%)</title><rect x="0.0447%" y="341" width="2.0367%" height="15" fill="rgb(240,193,28)" fg:x="52" fg:w="2371"/><text x="0.2947%" y="351.50">K..</text></g><g><title>graphics_year2`std::sys::windows::thread::impl$0::new::thread_start (2,371 samples, 2.04%)</title><rect x="0.0447%" y="325" width="2.0367%" height="15" fill="rgb(216,20,37)" fg:x="52" fg:w="2371"/><text x="0.2947%" y="335.50">g..</text></g><g><title>graphics_year2`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$ (2,371 samples, 2.04%)</title><rect x="0.0447%" y="309" width="2.0367%" height="15" fill="rgb(206,188,39)" fg:x="52" fg:w="2371"/><text x="0.2947%" y="319.50">g..</text></g><g><title>graphics_year2`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (2,371 samples, 2.04%)</title><rect x="0.0447%" y="293" width="2.0367%" height="15" fill="rgb(217,207,13)" fg:x="52" fg:w="2371"/><text x="0.2947%" y="303.50">g..</text></g><g><title>graphics_year2`rayon_core::registry::ThreadBuilder::run (2,371 samples, 2.04%)</title><rect x="0.0447%" y="277" width="2.0367%" height="15" fill="rgb(231,73,38)" fg:x="52" fg:w="2371"/><text x="0.2947%" y="287.50">g..</text></g><g><title>graphics_year2`rayon_core::registry::WorkerThread::wait_until_cold (2,371 samples, 2.04%)</title><rect x="0.0447%" y="261" width="2.0367%" height="15" fill="rgb(225,20,46)" fg:x="52" fg:w="2371"/><text x="0.2947%" y="271.50">g..</text></g><g><title>KERNEL32`SwitchToThreadStub (23 samples, 0.02%)</title><rect x="2.0822%" y="341" width="0.0198%" height="15" fill="rgb(210,31,41)" fg:x="2424" fg:w="23"/><text x="2.3322%" y="351.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (5,239 samples, 4.50%)</title><rect x="2.5813%" y="309" width="4.5003%" height="15" fill="rgb(221,200,47)" fg:x="3005" fg:w="5239"/><text x="2.8313%" y="319.50">ntdll..</text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (57 samples, 0.05%)</title><rect x="7.0816%" y="309" width="0.0490%" height="15" fill="rgb(226,26,5)" fg:x="8244" fg:w="57"/><text x="7.3316%" y="319.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (43 samples, 0.04%)</title><rect x="7.0936%" y="293" width="0.0369%" height="15" fill="rgb(249,33,26)" fg:x="8258" fg:w="43"/><text x="7.3436%" y="303.50"></text></g><g><title>KERNELBASE`SleepConditionVariableSRW (5,844 samples, 5.02%)</title><rect x="2.1123%" y="341" width="5.0200%" height="15" fill="rgb(235,183,28)" fg:x="2459" fg:w="5844"/><text x="2.3623%" y="351.50">KERNEL..</text></g><g><title>ntdll`RtlSleepConditionVariableSRW (5,844 samples, 5.02%)</title><rect x="2.1123%" y="325" width="5.0200%" height="15" fill="rgb(221,5,38)" fg:x="2459" fg:w="5844"/><text x="2.3623%" y="335.50">ntdll`..</text></g><g><title>ntdll`NtYieldExecution (87,519 samples, 75.18%)</title><rect x="7.3118%" y="325" width="75.1785%" height="15" fill="rgb(247,18,42)" fg:x="8512" fg:w="87519"/><text x="7.5618%" y="335.50">ntdll`NtYieldExecution</text></g><g><title>KERNELBASE`SwitchToThread (87,766 samples, 75.39%)</title><rect x="7.1322%" y="341" width="75.3906%" height="15" fill="rgb(241,131,45)" fg:x="8303" fg:w="87766"/><text x="7.3822%" y="351.50">KERNELBASE`SwitchToThread</text></g><g><title>ntdll`RtlGetCurrentUmsThread (38 samples, 0.03%)</title><rect x="82.4902%" y="325" width="0.0326%" height="15" fill="rgb(249,31,29)" fg:x="96031" fg:w="38"/><text x="82.7402%" y="335.50"></text></g><g><title>VCRUNTIME140`memcpy (210 samples, 0.18%)</title><rect x="82.5237%" y="341" width="0.1804%" height="15" fill="rgb(225,111,53)" fg:x="96070" fg:w="210"/><text x="82.7737%" y="351.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (43 samples, 0.04%)</title><rect x="82.7127%" y="165" width="0.0369%" height="15" fill="rgb(238,160,17)" fg:x="96290" fg:w="43"/><text x="82.9627%" y="175.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (43 samples, 0.04%)</title><rect x="82.7127%" y="149" width="0.0369%" height="15" fill="rgb(214,148,48)" fg:x="96290" fg:w="43"/><text x="82.9627%" y="159.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (166 samples, 0.14%)</title><rect x="82.7041%" y="229" width="0.1426%" height="15" fill="rgb(232,36,49)" fg:x="96280" fg:w="166"/><text x="82.9541%" y="239.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (166 samples, 0.14%)</title><rect x="82.7041%" y="213" width="0.1426%" height="15" fill="rgb(209,103,24)" fg:x="96280" fg:w="166"/><text x="82.9541%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (166 samples, 0.14%)</title><rect x="82.7041%" y="197" width="0.1426%" height="15" fill="rgb(229,88,8)" fg:x="96280" fg:w="166"/><text x="82.9541%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (166 samples, 0.14%)</title><rect x="82.7041%" y="181" width="0.1426%" height="15" fill="rgb(213,181,19)" fg:x="96280" fg:w="166"/><text x="82.9541%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (113 samples, 0.10%)</title><rect x="82.7496%" y="165" width="0.0971%" height="15" fill="rgb(254,191,54)" fg:x="96333" fg:w="113"/><text x="82.9996%" y="175.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (113 samples, 0.10%)</title><rect x="82.7496%" y="149" width="0.0971%" height="15" fill="rgb(241,83,37)" fg:x="96333" fg:w="113"/><text x="82.9996%" y="159.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (45 samples, 0.04%)</title><rect x="82.8467%" y="197" width="0.0387%" height="15" fill="rgb(233,36,39)" fg:x="96446" fg:w="45"/><text x="83.0967%" y="207.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (88 samples, 0.08%)</title><rect x="82.8467%" y="229" width="0.0756%" height="15" fill="rgb(226,3,54)" fg:x="96446" fg:w="88"/><text x="83.0967%" y="239.50"></text></g><g><title>ntdll`RtlpWakeByAddress (88 samples, 0.08%)</title><rect x="82.8467%" y="213" width="0.0756%" height="15" fill="rgb(245,192,40)" fg:x="96446" fg:w="88"/><text x="83.0967%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (43 samples, 0.04%)</title><rect x="82.8854%" y="197" width="0.0369%" height="15" fill="rgb(238,167,29)" fg:x="96491" fg:w="43"/><text x="83.1354%" y="207.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (43 samples, 0.04%)</title><rect x="82.8854%" y="181" width="0.0369%" height="15" fill="rgb(232,182,51)" fg:x="96491" fg:w="43"/><text x="83.1354%" y="191.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (16 samples, 0.01%)</title><rect x="82.9232%" y="69" width="0.0137%" height="15" fill="rgb(231,60,39)" fg:x="96535" fg:w="16"/><text x="83.1732%" y="79.50"></text></g><g><title>ntdll`RtlReAllocateHeap (286 samples, 0.25%)</title><rect x="82.7041%" y="293" width="0.2457%" height="15" fill="rgb(208,69,12)" fg:x="96280" fg:w="286"/><text x="82.9541%" y="303.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (286 samples, 0.25%)</title><rect x="82.7041%" y="277" width="0.2457%" height="15" fill="rgb(235,93,37)" fg:x="96280" fg:w="286"/><text x="82.9541%" y="287.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (286 samples, 0.25%)</title><rect x="82.7041%" y="261" width="0.2457%" height="15" fill="rgb(213,116,39)" fg:x="96280" fg:w="286"/><text x="82.9541%" y="271.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (286 samples, 0.25%)</title><rect x="82.7041%" y="245" width="0.2457%" height="15" fill="rgb(222,207,29)" fg:x="96280" fg:w="286"/><text x="82.9541%" y="255.50"></text></g><g><title>ntdll`RtlReAllocateHeap (32 samples, 0.03%)</title><rect x="82.9223%" y="229" width="0.0275%" height="15" fill="rgb(206,96,30)" fg:x="96534" fg:w="32"/><text x="83.1723%" y="239.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (32 samples, 0.03%)</title><rect x="82.9223%" y="213" width="0.0275%" height="15" fill="rgb(218,138,4)" fg:x="96534" fg:w="32"/><text x="83.1723%" y="223.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (32 samples, 0.03%)</title><rect x="82.9223%" y="197" width="0.0275%" height="15" fill="rgb(250,191,14)" fg:x="96534" fg:w="32"/><text x="83.1723%" y="207.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (31 samples, 0.03%)</title><rect x="82.9232%" y="181" width="0.0266%" height="15" fill="rgb(239,60,40)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="191.50"></text></g><g><title>ntdll`RtlpAllocateHeap (31 samples, 0.03%)</title><rect x="82.9232%" y="165" width="0.0266%" height="15" fill="rgb(206,27,48)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="175.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (31 samples, 0.03%)</title><rect x="82.9232%" y="149" width="0.0266%" height="15" fill="rgb(225,35,8)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="159.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (31 samples, 0.03%)</title><rect x="82.9232%" y="133" width="0.0266%" height="15" fill="rgb(250,213,24)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="143.50"></text></g><g><title>ntdll`RtlpAllocateHeap (31 samples, 0.03%)</title><rect x="82.9232%" y="117" width="0.0266%" height="15" fill="rgb(247,123,22)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="127.50"></text></g><g><title>ntdll`RtlpExtendHeap (31 samples, 0.03%)</title><rect x="82.9232%" y="101" width="0.0266%" height="15" fill="rgb(231,138,38)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="111.50"></text></g><g><title>ntdll`RtlpFindAndCommitPages (31 samples, 0.03%)</title><rect x="82.9232%" y="85" width="0.0266%" height="15" fill="rgb(231,145,46)" fg:x="96535" fg:w="31"/><text x="83.1732%" y="95.50"></text></g><g><title>ntdll`RtlpCreateUCREntry (15 samples, 0.01%)</title><rect x="82.9369%" y="69" width="0.0129%" height="15" fill="rgb(251,118,11)" fg:x="96551" fg:w="15"/><text x="83.1869%" y="79.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (60 samples, 0.05%)</title><rect x="82.9498%" y="245" width="0.0515%" height="15" fill="rgb(217,147,25)" fg:x="96566" fg:w="60"/><text x="83.1998%" y="255.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (60 samples, 0.05%)</title><rect x="82.9498%" y="229" width="0.0515%" height="15" fill="rgb(247,81,37)" fg:x="96566" fg:w="60"/><text x="83.1998%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (60 samples, 0.05%)</title><rect x="82.9498%" y="213" width="0.0515%" height="15" fill="rgb(209,12,38)" fg:x="96566" fg:w="60"/><text x="83.1998%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (60 samples, 0.05%)</title><rect x="82.9498%" y="197" width="0.0515%" height="15" fill="rgb(227,1,9)" fg:x="96566" fg:w="60"/><text x="83.1998%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (51 samples, 0.04%)</title><rect x="82.9575%" y="181" width="0.0438%" height="15" fill="rgb(248,47,43)" fg:x="96575" fg:w="51"/><text x="83.2075%" y="191.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (51 samples, 0.04%)</title><rect x="82.9575%" y="165" width="0.0438%" height="15" fill="rgb(221,10,30)" fg:x="96575" fg:w="51"/><text x="83.2075%" y="175.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (13 samples, 0.01%)</title><rect x="83.0013%" y="245" width="0.0112%" height="15" fill="rgb(210,229,1)" fg:x="96626" fg:w="13"/><text x="83.2513%" y="255.50"></text></g><g><title>ntdll`RtlpWakeByAddress (13 samples, 0.01%)</title><rect x="83.0013%" y="229" width="0.0112%" height="15" fill="rgb(222,148,37)" fg:x="96626" fg:w="13"/><text x="83.2513%" y="239.50"></text></g><g><title>graphics_year2`core::iter::adapters::map::impl$2::try_fold&lt;tuple$&lt;f64,f64,f64&gt;,core::ops::range::Range&lt;usize&gt;,ref$&lt;graphics_year2::shapes3d::torus::impl$0::generate_torus::closure$0::closure_env$0&gt;,alloc::vec::Vec&lt;tuple$ (361 samples, 0.31%)</title><rect x="82.7041%" y="341" width="0.3101%" height="15" fill="rgb(234,67,33)" fg:x="96280" fg:w="361"/><text x="82.9541%" y="351.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken&lt;graphics_year2::parser::Rule&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken (361 samples, 0.31%)</title><rect x="82.7041%" y="325" width="0.3101%" height="15" fill="rgb(247,98,35)" fg:x="96280" fg:w="361"/><text x="82.9541%" y="335.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (361 samples, 0.31%)</title><rect x="82.7041%" y="309" width="0.3101%" height="15" fill="rgb(247,138,52)" fg:x="96280" fg:w="361"/><text x="82.9541%" y="319.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (75 samples, 0.06%)</title><rect x="82.9498%" y="293" width="0.0644%" height="15" fill="rgb(213,79,30)" fg:x="96566" fg:w="75"/><text x="83.1998%" y="303.50"></text></g><g><title>ntdll`RtlpAllocateHeap (75 samples, 0.06%)</title><rect x="82.9498%" y="277" width="0.0644%" height="15" fill="rgb(246,177,23)" fg:x="96566" fg:w="75"/><text x="83.1998%" y="287.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (75 samples, 0.06%)</title><rect x="82.9498%" y="261" width="0.0644%" height="15" fill="rgb(230,62,27)" fg:x="96566" fg:w="75"/><text x="83.1998%" y="271.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (110 samples, 0.09%)</title><rect x="83.0632%" y="181" width="0.0945%" height="15" fill="rgb(216,154,8)" fg:x="96698" fg:w="110"/><text x="83.3132%" y="191.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (110 samples, 0.09%)</title><rect x="83.0632%" y="165" width="0.0945%" height="15" fill="rgb(244,35,45)" fg:x="96698" fg:w="110"/><text x="83.3132%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (342 samples, 0.29%)</title><rect x="83.0580%" y="197" width="0.2938%" height="15" fill="rgb(251,115,12)" fg:x="96692" fg:w="342"/><text x="83.3080%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (226 samples, 0.19%)</title><rect x="83.1577%" y="181" width="0.1941%" height="15" fill="rgb(240,54,50)" fg:x="96808" fg:w="226"/><text x="83.4077%" y="191.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (212 samples, 0.18%)</title><rect x="83.1697%" y="165" width="0.1821%" height="15" fill="rgb(233,84,52)" fg:x="96822" fg:w="212"/><text x="83.4197%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (1,059 samples, 0.91%)</title><rect x="83.3518%" y="197" width="0.9097%" height="15" fill="rgb(207,117,47)" fg:x="97034" fg:w="1059"/><text x="83.6018%" y="207.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (1,057 samples, 0.91%)</title><rect x="83.3535%" y="181" width="0.9080%" height="15" fill="rgb(249,43,39)" fg:x="97036" fg:w="1057"/><text x="83.6035%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (4,819 samples, 4.14%)</title><rect x="83.0477%" y="213" width="4.1395%" height="15" fill="rgb(209,38,44)" fg:x="96680" fg:w="4819"/><text x="83.2977%" y="223.50">ntdll..</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (3,406 samples, 2.93%)</title><rect x="84.2615%" y="197" width="2.9257%" height="15" fill="rgb(236,212,23)" fg:x="98093" fg:w="3406"/><text x="84.5115%" y="207.50">nt..</text></g><g><title>ntdll`NtWaitForAlertByThreadId (3,398 samples, 2.92%)</title><rect x="84.2684%" y="181" width="2.9189%" height="15" fill="rgb(242,79,21)" fg:x="98101" fg:w="3398"/><text x="84.5184%" y="191.50">nt..</text></g><g><title>ntdll`RtlEnterCriticalSection (4,858 samples, 4.17%)</title><rect x="83.0159%" y="261" width="4.1730%" height="15" fill="rgb(211,96,35)" fg:x="96643" fg:w="4858"/><text x="83.2659%" y="271.50">ntdll..</text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (4,853 samples, 4.17%)</title><rect x="83.0202%" y="245" width="4.1687%" height="15" fill="rgb(253,215,40)" fg:x="96648" fg:w="4853"/><text x="83.2702%" y="255.50">ntdll..</text></g><g><title>ntdll`RtlpWaitOnCriticalSection (4,826 samples, 4.15%)</title><rect x="83.0434%" y="229" width="4.1455%" height="15" fill="rgb(211,81,21)" fg:x="96675" fg:w="4826"/><text x="83.2934%" y="239.50">ntdll..</text></g><g><title>ntdll`RtlFreeHeap (23 samples, 0.02%)</title><rect x="87.1889%" y="261" width="0.0198%" height="15" fill="rgb(208,190,38)" fg:x="101501" fg:w="23"/><text x="87.4389%" y="271.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (23 samples, 0.02%)</title><rect x="87.1889%" y="245" width="0.0198%" height="15" fill="rgb(235,213,38)" fg:x="101501" fg:w="23"/><text x="87.4389%" y="255.50"></text></g><g><title>ntdll`RtlpFreeHeap (22 samples, 0.02%)</title><rect x="87.1898%" y="229" width="0.0189%" height="15" fill="rgb(237,122,38)" fg:x="101502" fg:w="22"/><text x="87.4398%" y="239.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (874 samples, 0.75%)</title><rect x="87.2104%" y="229" width="0.7508%" height="15" fill="rgb(244,218,35)" fg:x="101526" fg:w="874"/><text x="87.4604%" y="239.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (1,912 samples, 1.64%)</title><rect x="87.2087%" y="261" width="1.6424%" height="15" fill="rgb(240,68,47)" fg:x="101524" fg:w="1912"/><text x="87.4587%" y="271.50"></text></g><g><title>ntdll`RtlpWakeByAddress (1,912 samples, 1.64%)</title><rect x="87.2087%" y="245" width="1.6424%" height="15" fill="rgb(210,16,53)" fg:x="101524" fg:w="1912"/><text x="87.4587%" y="255.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (1,036 samples, 0.89%)</title><rect x="87.9612%" y="229" width="0.8899%" height="15" fill="rgb(235,124,12)" fg:x="102400" fg:w="1036"/><text x="88.2112%" y="239.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (1,035 samples, 0.89%)</title><rect x="87.9620%" y="213" width="0.8891%" height="15" fill="rgb(224,169,11)" fg:x="102401" fg:w="1035"/><text x="88.2120%" y="223.50"></text></g><g><title>graphics_year2`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;alloc::vec::Vec&lt;tuple$ (6,799 samples, 5.84%)</title><rect x="83.0142%" y="341" width="5.8403%" height="15" fill="rgb(250,166,2)" fg:x="96641" fg:w="6799"/><text x="83.2642%" y="351.50">graphic..</text></g><g><title>ntdll`RtlFreeHeap (6,799 samples, 5.84%)</title><rect x="83.0142%" y="325" width="5.8403%" height="15" fill="rgb(242,216,29)" fg:x="96641" fg:w="6799"/><text x="83.2642%" y="335.50">ntdll`R..</text></g><g><title>ntdll`RtlpFreeHeapInternal (6,799 samples, 5.84%)</title><rect x="83.0142%" y="309" width="5.8403%" height="15" fill="rgb(230,116,27)" fg:x="96641" fg:w="6799"/><text x="83.2642%" y="319.50">ntdll`R..</text></g><g><title>ntdll`RtlpFreeHeap (6,798 samples, 5.84%)</title><rect x="83.0151%" y="293" width="5.8395%" height="15" fill="rgb(228,99,48)" fg:x="96642" fg:w="6798"/><text x="83.2651%" y="303.50">ntdll`R..</text></g><g><title>ntdll`RtlDebugFreeHeap (6,798 samples, 5.84%)</title><rect x="83.0151%" y="277" width="5.8395%" height="15" fill="rgb(253,11,6)" fg:x="96642" fg:w="6798"/><text x="83.2651%" y="287.50">ntdll`R..</text></g><g><title>graphics_year2`crossbeam_deque::deque::Worker&lt;rayon_core::job::JobRef&gt;::pop (12 samples, 0.01%)</title><rect x="88.8820%" y="325" width="0.0103%" height="15" fill="rgb(247,143,39)" fg:x="103472" fg:w="12"/><text x="89.1320%" y="335.50"></text></g><g><title>graphics_year2`crossbeam_deque::deque::Worker&lt;rayon_core::job::JobRef&gt;::pop (32 samples, 0.03%)</title><rect x="88.9138%" y="293" width="0.0275%" height="15" fill="rgb(236,97,10)" fg:x="103509" fg:w="32"/><text x="89.1638%" y="303.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt;,rayon::vec::DrainProducer&lt;f64&gt; &gt;,rayon::iter::for_each::ForEachConsumer (52 samples, 0.04%)</title><rect x="88.9413%" y="293" width="0.0447%" height="15" fill="rgb(233,208,19)" fg:x="103541" fg:w="52"/><text x="89.1913%" y="303.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve_for_push (21 samples, 0.02%)</title><rect x="88.9679%" y="277" width="0.0180%" height="15" fill="rgb(216,164,2)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="287.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (21 samples, 0.02%)</title><rect x="88.9679%" y="261" width="0.0180%" height="15" fill="rgb(220,129,5)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="271.50"></text></g><g><title>ntdll`RtlReAllocateHeap (21 samples, 0.02%)</title><rect x="88.9679%" y="245" width="0.0180%" height="15" fill="rgb(242,17,10)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="255.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (21 samples, 0.02%)</title><rect x="88.9679%" y="229" width="0.0180%" height="15" fill="rgb(242,107,0)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="239.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (21 samples, 0.02%)</title><rect x="88.9679%" y="213" width="0.0180%" height="15" fill="rgb(251,28,31)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="223.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (21 samples, 0.02%)</title><rect x="88.9679%" y="197" width="0.0180%" height="15" fill="rgb(233,223,10)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="207.50"></text></g><g><title>ntdll`RtlReAllocateHeap (21 samples, 0.02%)</title><rect x="88.9679%" y="181" width="0.0180%" height="15" fill="rgb(215,21,27)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="191.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (21 samples, 0.02%)</title><rect x="88.9679%" y="165" width="0.0180%" height="15" fill="rgb(232,23,21)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="175.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (21 samples, 0.02%)</title><rect x="88.9679%" y="149" width="0.0180%" height="15" fill="rgb(244,5,23)" fg:x="103572" fg:w="21"/><text x="89.2179%" y="159.50"></text></g><g><title>graphics_year2`rayon_core::registry::WorkerThread::wait_until_cold (46 samples, 0.04%)</title><rect x="88.9860%" y="293" width="0.0395%" height="15" fill="rgb(226,81,46)" fg:x="103593" fg:w="46"/><text x="89.2360%" y="303.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_any_threads (35 samples, 0.03%)</title><rect x="88.9954%" y="277" width="0.0301%" height="15" fill="rgb(247,70,30)" fg:x="103604" fg:w="35"/><text x="89.2454%" y="287.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_specific_thread (35 samples, 0.03%)</title><rect x="88.9954%" y="261" width="0.0301%" height="15" fill="rgb(212,68,19)" fg:x="103604" fg:w="35"/><text x="89.2454%" y="271.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (30 samples, 0.03%)</title><rect x="88.9997%" y="245" width="0.0258%" height="15" fill="rgb(240,187,13)" fg:x="103609" fg:w="30"/><text x="89.2497%" y="255.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (30 samples, 0.03%)</title><rect x="88.9997%" y="229" width="0.0258%" height="15" fill="rgb(223,113,26)" fg:x="103609" fg:w="30"/><text x="89.2497%" y="239.50"></text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (13 samples, 0.01%)</title><rect x="89.0263%" y="261" width="0.0112%" height="15" fill="rgb(206,192,2)" fg:x="103640" fg:w="13"/><text x="89.2763%" y="271.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt;,rayon::vec::DrainProducer&lt;f64&gt; &gt;,rayon::iter::for_each::ForEachConsumer (276 samples, 0.24%)</title><rect x="88.8923%" y="325" width="0.2371%" height="15" fill="rgb(241,108,4)" fg:x="103484" fg:w="276"/><text x="89.1423%" y="335.50"></text></g><g><title>graphics_year2`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec (261 samples, 0.22%)</title><rect x="88.9052%" y="309" width="0.2242%" height="15" fill="rgb(247,173,49)" fg:x="103499" fg:w="261"/><text x="89.1552%" y="319.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_any_threads (121 samples, 0.10%)</title><rect x="89.0255%" y="293" width="0.1039%" height="15" fill="rgb(224,114,35)" fg:x="103639" fg:w="121"/><text x="89.2755%" y="303.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_specific_thread (121 samples, 0.10%)</title><rect x="89.0255%" y="277" width="0.1039%" height="15" fill="rgb(245,159,27)" fg:x="103639" fg:w="121"/><text x="89.2755%" y="287.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (105 samples, 0.09%)</title><rect x="89.0392%" y="261" width="0.0902%" height="15" fill="rgb(245,172,44)" fg:x="103655" fg:w="105"/><text x="89.2892%" y="271.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (104 samples, 0.09%)</title><rect x="89.0401%" y="245" width="0.0893%" height="15" fill="rgb(236,23,11)" fg:x="103656" fg:w="104"/><text x="89.2901%" y="255.50"></text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (14 samples, 0.01%)</title><rect x="89.1758%" y="277" width="0.0120%" height="15" fill="rgb(205,117,38)" fg:x="103814" fg:w="14"/><text x="89.4258%" y="287.50"></text></g><g><title>graphics_year2`core::panic::unwind_safe::impl$23::call_once&lt;tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,rayon_core::job::impl$4::execute::call::closure_env$0&lt;tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0 (484 samples, 0.42%)</title><rect x="88.8545%" y="341" width="0.4158%" height="15" fill="rgb(237,72,25)" fg:x="103440" fg:w="484"/><text x="89.1045%" y="351.50"></text></g><g><title>graphics_year2`rayon_core::registry::WorkerThread::wait_until_cold (164 samples, 0.14%)</title><rect x="89.1294%" y="325" width="0.1409%" height="15" fill="rgb(244,70,9)" fg:x="103760" fg:w="164"/><text x="89.3794%" y="335.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_any_threads (111 samples, 0.10%)</title><rect x="89.1749%" y="309" width="0.0953%" height="15" fill="rgb(217,125,39)" fg:x="103813" fg:w="111"/><text x="89.4249%" y="319.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_specific_thread (111 samples, 0.10%)</title><rect x="89.1749%" y="293" width="0.0953%" height="15" fill="rgb(235,36,10)" fg:x="103813" fg:w="111"/><text x="89.4249%" y="303.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (94 samples, 0.08%)</title><rect x="89.1895%" y="277" width="0.0807%" height="15" fill="rgb(251,123,47)" fg:x="103830" fg:w="94"/><text x="89.4395%" y="287.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (94 samples, 0.08%)</title><rect x="89.1895%" y="261" width="0.0807%" height="15" fill="rgb(221,13,13)" fg:x="103830" fg:w="94"/><text x="89.4395%" y="271.50"></text></g><g><title>graphics_year2`__chkstk (14 samples, 0.01%)</title><rect x="91.3233%" y="293" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="106314" fg:w="14"/><text x="91.5733%" y="303.50"></text></g><g><title>graphics_year2`crossbeam_epoch::internal::Global::try_advance (312 samples, 0.27%)</title><rect x="91.3353%" y="293" width="0.2680%" height="15" fill="rgb(211,50,8)" fg:x="106328" fg:w="312"/><text x="91.5853%" y="303.50"></text></g><g><title>graphics_year2`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal (2,712 samples, 2.33%)</title><rect x="89.2754%" y="341" width="2.3296%" height="15" fill="rgb(245,182,24)" fg:x="103930" fg:w="2712"/><text x="89.5254%" y="351.50">g..</text></g><g><title>graphics_year2`crossbeam_epoch::default::pin (1,753 samples, 1.51%)</title><rect x="90.0992%" y="325" width="1.5058%" height="15" fill="rgb(242,14,37)" fg:x="104889" fg:w="1753"/><text x="90.3492%" y="335.50"></text></g><g><title>graphics_year2`crossbeam_epoch::internal::Global::collect (334 samples, 0.29%)</title><rect x="91.3181%" y="309" width="0.2869%" height="15" fill="rgb(246,228,12)" fg:x="106308" fg:w="334"/><text x="91.5681%" y="319.50"></text></g><g><title>graphics_year2`core::ptr::drop_in_place (47 samples, 0.04%)</title><rect x="91.6093%" y="325" width="0.0404%" height="15" fill="rgb(213,55,15)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="335.50"></text></g><g><title>ntdll`RtlFreeHeap (47 samples, 0.04%)</title><rect x="91.6093%" y="309" width="0.0404%" height="15" fill="rgb(209,9,3)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="319.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (47 samples, 0.04%)</title><rect x="91.6093%" y="293" width="0.0404%" height="15" fill="rgb(230,59,30)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="303.50"></text></g><g><title>ntdll`RtlpFreeHeap (47 samples, 0.04%)</title><rect x="91.6093%" y="277" width="0.0404%" height="15" fill="rgb(209,121,21)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="287.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (47 samples, 0.04%)</title><rect x="91.6093%" y="261" width="0.0404%" height="15" fill="rgb(220,109,13)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="271.50"></text></g><g><title>ntdll`RtlFreeHeap (47 samples, 0.04%)</title><rect x="91.6093%" y="245" width="0.0404%" height="15" fill="rgb(232,18,1)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="255.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (47 samples, 0.04%)</title><rect x="91.6093%" y="229" width="0.0404%" height="15" fill="rgb(215,41,42)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="239.50"></text></g><g><title>ntdll`RtlpFreeHeap (47 samples, 0.04%)</title><rect x="91.6093%" y="213" width="0.0404%" height="15" fill="rgb(224,123,36)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="223.50"></text></g><g><title>ntdll`RtlpSecMemFreeVirtualMemory (47 samples, 0.04%)</title><rect x="91.6093%" y="197" width="0.0404%" height="15" fill="rgb(240,125,3)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="207.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (47 samples, 0.04%)</title><rect x="91.6093%" y="181" width="0.0404%" height="15" fill="rgb(205,98,50)" fg:x="106647" fg:w="47"/><text x="91.8593%" y="191.50"></text></g><g><title>graphics_year2`graphics_year2::shapes3d::sphere::Sphere::add_to_matrix (13 samples, 0.01%)</title><rect x="91.6497%" y="325" width="0.0112%" height="15" fill="rgb(205,185,37)" fg:x="106694" fg:w="13"/><text x="91.8997%" y="335.50"></text></g><g><title>graphics_year2`graphics_year2::parser::impl$0::parse_str::closure$0 (65 samples, 0.06%)</title><rect x="91.6093%" y="341" width="0.0558%" height="15" fill="rgb(238,207,15)" fg:x="106647" fg:w="65"/><text x="91.8593%" y="351.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (15 samples, 0.01%)</title><rect x="91.6772%" y="133" width="0.0129%" height="15" fill="rgb(213,199,42)" fg:x="106726" fg:w="15"/><text x="91.9272%" y="143.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (15 samples, 0.01%)</title><rect x="91.6772%" y="117" width="0.0129%" height="15" fill="rgb(235,201,11)" fg:x="106726" fg:w="15"/><text x="91.9272%" y="127.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (68 samples, 0.06%)</title><rect x="91.6763%" y="197" width="0.0584%" height="15" fill="rgb(207,46,11)" fg:x="106725" fg:w="68"/><text x="91.9263%" y="207.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (68 samples, 0.06%)</title><rect x="91.6763%" y="181" width="0.0584%" height="15" fill="rgb(241,35,35)" fg:x="106725" fg:w="68"/><text x="91.9263%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (68 samples, 0.06%)</title><rect x="91.6763%" y="165" width="0.0584%" height="15" fill="rgb(243,32,47)" fg:x="106725" fg:w="68"/><text x="91.9263%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (68 samples, 0.06%)</title><rect x="91.6763%" y="149" width="0.0584%" height="15" fill="rgb(247,202,23)" fg:x="106725" fg:w="68"/><text x="91.9263%" y="159.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (52 samples, 0.04%)</title><rect x="91.6901%" y="133" width="0.0447%" height="15" fill="rgb(219,102,11)" fg:x="106741" fg:w="52"/><text x="91.9401%" y="143.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (52 samples, 0.04%)</title><rect x="91.6901%" y="117" width="0.0447%" height="15" fill="rgb(243,110,44)" fg:x="106741" fg:w="52"/><text x="91.9401%" y="127.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (22 samples, 0.02%)</title><rect x="91.7347%" y="165" width="0.0189%" height="15" fill="rgb(222,74,54)" fg:x="106793" fg:w="22"/><text x="91.9847%" y="175.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (38 samples, 0.03%)</title><rect x="91.7347%" y="197" width="0.0326%" height="15" fill="rgb(216,99,12)" fg:x="106793" fg:w="38"/><text x="91.9847%" y="207.50"></text></g><g><title>ntdll`RtlpWakeByAddress (38 samples, 0.03%)</title><rect x="91.7347%" y="181" width="0.0326%" height="15" fill="rgb(226,22,26)" fg:x="106793" fg:w="38"/><text x="91.9847%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (16 samples, 0.01%)</title><rect x="91.7536%" y="165" width="0.0137%" height="15" fill="rgb(217,163,10)" fg:x="106815" fg:w="16"/><text x="92.0036%" y="175.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (16 samples, 0.01%)</title><rect x="91.7536%" y="149" width="0.0137%" height="15" fill="rgb(213,25,53)" fg:x="106815" fg:w="16"/><text x="92.0036%" y="159.50"></text></g><g><title>ntdll`RtlReAllocateHeap (111 samples, 0.10%)</title><rect x="91.6763%" y="261" width="0.0953%" height="15" fill="rgb(252,105,26)" fg:x="106725" fg:w="111"/><text x="91.9263%" y="271.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (111 samples, 0.10%)</title><rect x="91.6763%" y="245" width="0.0953%" height="15" fill="rgb(220,39,43)" fg:x="106725" fg:w="111"/><text x="91.9263%" y="255.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (111 samples, 0.10%)</title><rect x="91.6763%" y="229" width="0.0953%" height="15" fill="rgb(229,68,48)" fg:x="106725" fg:w="111"/><text x="91.9263%" y="239.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (111 samples, 0.10%)</title><rect x="91.6763%" y="213" width="0.0953%" height="15" fill="rgb(252,8,32)" fg:x="106725" fg:w="111"/><text x="91.9263%" y="223.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (17 samples, 0.01%)</title><rect x="91.7717%" y="213" width="0.0146%" height="15" fill="rgb(223,20,43)" fg:x="106836" fg:w="17"/><text x="92.0217%" y="223.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (17 samples, 0.01%)</title><rect x="91.7717%" y="197" width="0.0146%" height="15" fill="rgb(229,81,49)" fg:x="106836" fg:w="17"/><text x="92.0217%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (17 samples, 0.01%)</title><rect x="91.7717%" y="181" width="0.0146%" height="15" fill="rgb(236,28,36)" fg:x="106836" fg:w="17"/><text x="92.0217%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (17 samples, 0.01%)</title><rect x="91.7717%" y="165" width="0.0146%" height="15" fill="rgb(249,185,26)" fg:x="106836" fg:w="17"/><text x="92.0217%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (15 samples, 0.01%)</title><rect x="91.7734%" y="149" width="0.0129%" height="15" fill="rgb(249,174,33)" fg:x="106838" fg:w="15"/><text x="92.0234%" y="159.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (15 samples, 0.01%)</title><rect x="91.7734%" y="133" width="0.0129%" height="15" fill="rgb(233,201,37)" fg:x="106838" fg:w="15"/><text x="92.0234%" y="143.50"></text></g><g><title>graphics_year2`core::iter::adapters::map::impl$2::try_fold&lt;tuple$&lt;f64,f64,f64&gt;,core::ops::range::Range&lt;usize&gt;,ref$&lt;graphics_year2::shapes3d::sphere::impl$0::generate::closure$0::closure_env$0&gt;,alloc::vec::Vec&lt;tuple$ (137 samples, 0.12%)</title><rect x="91.6763%" y="309" width="0.1177%" height="15" fill="rgb(221,78,26)" fg:x="106725" fg:w="137"/><text x="91.9263%" y="319.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken&lt;graphics_year2::parser::Rule&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken (137 samples, 0.12%)</title><rect x="91.6763%" y="293" width="0.1177%" height="15" fill="rgb(250,127,30)" fg:x="106725" fg:w="137"/><text x="91.9263%" y="303.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (137 samples, 0.12%)</title><rect x="91.6763%" y="277" width="0.1177%" height="15" fill="rgb(230,49,44)" fg:x="106725" fg:w="137"/><text x="91.9263%" y="287.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (26 samples, 0.02%)</title><rect x="91.7717%" y="261" width="0.0223%" height="15" fill="rgb(229,67,23)" fg:x="106836" fg:w="26"/><text x="92.0217%" y="271.50"></text></g><g><title>ntdll`RtlpAllocateHeap (26 samples, 0.02%)</title><rect x="91.7717%" y="245" width="0.0223%" height="15" fill="rgb(249,83,47)" fg:x="106836" fg:w="26"/><text x="92.0217%" y="255.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (26 samples, 0.02%)</title><rect x="91.7717%" y="229" width="0.0223%" height="15" fill="rgb(215,43,3)" fg:x="106836" fg:w="26"/><text x="92.0217%" y="239.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (59 samples, 0.05%)</title><rect x="91.7940%" y="245" width="0.0507%" height="15" fill="rgb(238,154,13)" fg:x="106862" fg:w="59"/><text x="92.0440%" y="255.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (59 samples, 0.05%)</title><rect x="91.7940%" y="229" width="0.0507%" height="15" fill="rgb(219,56,2)" fg:x="106862" fg:w="59"/><text x="92.0440%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (59 samples, 0.05%)</title><rect x="91.7940%" y="213" width="0.0507%" height="15" fill="rgb(233,0,4)" fg:x="106862" fg:w="59"/><text x="92.0440%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (59 samples, 0.05%)</title><rect x="91.7940%" y="197" width="0.0507%" height="15" fill="rgb(235,30,7)" fg:x="106862" fg:w="59"/><text x="92.0440%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (48 samples, 0.04%)</title><rect x="91.8035%" y="181" width="0.0412%" height="15" fill="rgb(250,79,13)" fg:x="106873" fg:w="48"/><text x="92.0535%" y="191.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (48 samples, 0.04%)</title><rect x="91.8035%" y="165" width="0.0412%" height="15" fill="rgb(211,146,34)" fg:x="106873" fg:w="48"/><text x="92.0535%" y="175.50"></text></g><g><title>graphics_year2`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (205 samples, 0.18%)</title><rect x="91.6763%" y="341" width="0.1761%" height="15" fill="rgb(228,22,38)" fg:x="106725" fg:w="205"/><text x="91.9263%" y="351.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::range::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::fold::FoldConsumer&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (205 samples, 0.18%)</title><rect x="91.6763%" y="325" width="0.1761%" height="15" fill="rgb(235,168,5)" fg:x="106725" fg:w="205"/><text x="91.9263%" y="335.50"></text></g><g><title>graphics_year2`rayon::iter::map::impl$8::complete&lt;usize,tuple$&lt;f64,f64,f64&gt;,rayon::iter::fold::FoldFolder&lt;rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;f64,f64,f64&gt;,alloc::alloc::Global&gt; &gt;  (68 samples, 0.06%)</title><rect x="91.7940%" y="309" width="0.0584%" height="15" fill="rgb(221,155,16)" fg:x="106862" fg:w="68"/><text x="92.0440%" y="319.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (68 samples, 0.06%)</title><rect x="91.7940%" y="293" width="0.0584%" height="15" fill="rgb(215,215,53)" fg:x="106862" fg:w="68"/><text x="92.0440%" y="303.50"></text></g><g><title>ntdll`RtlpAllocateHeap (68 samples, 0.06%)</title><rect x="91.7940%" y="277" width="0.0584%" height="15" fill="rgb(223,4,10)" fg:x="106862" fg:w="68"/><text x="92.0440%" y="287.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (68 samples, 0.06%)</title><rect x="91.7940%" y="261" width="0.0584%" height="15" fill="rgb(234,103,6)" fg:x="106862" fg:w="68"/><text x="92.0440%" y="271.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (66 samples, 0.06%)</title><rect x="91.8894%" y="133" width="0.0567%" height="15" fill="rgb(227,97,0)" fg:x="106973" fg:w="66"/><text x="92.1394%" y="143.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (66 samples, 0.06%)</title><rect x="91.8894%" y="117" width="0.0567%" height="15" fill="rgb(234,150,53)" fg:x="106973" fg:w="66"/><text x="92.1394%" y="127.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (189 samples, 0.16%)</title><rect x="91.8885%" y="149" width="0.1624%" height="15" fill="rgb(228,201,54)" fg:x="106972" fg:w="189"/><text x="92.1385%" y="159.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (122 samples, 0.10%)</title><rect x="91.9461%" y="133" width="0.1048%" height="15" fill="rgb(222,22,37)" fg:x="107039" fg:w="122"/><text x="92.1961%" y="143.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (115 samples, 0.10%)</title><rect x="91.9521%" y="117" width="0.0988%" height="15" fill="rgb(237,53,32)" fg:x="107046" fg:w="115"/><text x="92.2021%" y="127.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (507 samples, 0.44%)</title><rect x="92.0509%" y="149" width="0.4355%" height="15" fill="rgb(233,25,53)" fg:x="107161" fg:w="507"/><text x="92.3009%" y="159.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (507 samples, 0.44%)</title><rect x="92.0509%" y="133" width="0.4355%" height="15" fill="rgb(210,40,34)" fg:x="107161" fg:w="507"/><text x="92.3009%" y="143.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (2,406 samples, 2.07%)</title><rect x="91.8705%" y="213" width="2.0667%" height="15" fill="rgb(241,220,44)" fg:x="106951" fg:w="2406"/><text x="92.1205%" y="223.50">n..</text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (2,406 samples, 2.07%)</title><rect x="91.8705%" y="197" width="2.0667%" height="15" fill="rgb(235,28,35)" fg:x="106951" fg:w="2406"/><text x="92.1205%" y="207.50">n..</text></g><g><title>ntdll`RtlpWaitOnCriticalSection (2,393 samples, 2.06%)</title><rect x="91.8816%" y="181" width="2.0556%" height="15" fill="rgb(210,56,17)" fg:x="106964" fg:w="2393"/><text x="92.1316%" y="191.50">n..</text></g><g><title>ntdll`RtlpWaitOnAddress (2,391 samples, 2.05%)</title><rect x="91.8833%" y="165" width="2.0539%" height="15" fill="rgb(224,130,29)" fg:x="106966" fg:w="2391"/><text x="92.1333%" y="175.50">n..</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (1,689 samples, 1.45%)</title><rect x="92.4864%" y="149" width="1.4508%" height="15" fill="rgb(235,212,8)" fg:x="107668" fg:w="1689"/><text x="92.7364%" y="159.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (1,688 samples, 1.45%)</title><rect x="92.4872%" y="133" width="1.4500%" height="15" fill="rgb(223,33,50)" fg:x="107669" fg:w="1688"/><text x="92.7372%" y="143.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (468 samples, 0.40%)</title><rect x="93.9389%" y="181" width="0.4020%" height="15" fill="rgb(219,149,13)" fg:x="109359" fg:w="468"/><text x="94.1889%" y="191.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (969 samples, 0.83%)</title><rect x="93.9372%" y="213" width="0.8324%" height="15" fill="rgb(250,156,29)" fg:x="109357" fg:w="969"/><text x="94.1872%" y="223.50"></text></g><g><title>ntdll`RtlpWakeByAddress (968 samples, 0.83%)</title><rect x="93.9381%" y="197" width="0.8315%" height="15" fill="rgb(216,193,19)" fg:x="109358" fg:w="968"/><text x="94.1881%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (499 samples, 0.43%)</title><rect x="94.3409%" y="181" width="0.4286%" height="15" fill="rgb(216,135,14)" fg:x="109827" fg:w="499"/><text x="94.5909%" y="191.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (499 samples, 0.43%)</title><rect x="94.3409%" y="165" width="0.4286%" height="15" fill="rgb(241,47,5)" fg:x="109827" fg:w="499"/><text x="94.5909%" y="175.50"></text></g><g><title>graphics_year2`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult (3,409 samples, 2.93%)</title><rect x="91.8524%" y="341" width="2.9283%" height="15" fill="rgb(233,42,35)" fg:x="106930" fg:w="3409"/><text x="92.1024%" y="351.50">gr..</text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (3,409 samples, 2.93%)</title><rect x="91.8524%" y="325" width="2.9283%" height="15" fill="rgb(231,13,6)" fg:x="106930" fg:w="3409"/><text x="92.1024%" y="335.50">gr..</text></g><g><title>graphics_year2`rayon::iter::plumbing::Producer::fold_with&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (3,409 samples, 2.93%)</title><rect x="91.8524%" y="309" width="2.9283%" height="15" fill="rgb(207,181,40)" fg:x="106930" fg:w="3409"/><text x="92.1024%" y="319.50">gr..</text></g><g><title>graphics_year2`rayon::iter::chunks::impl$4::next&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer&lt;f64&gt; &gt;,rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (3,394 samples, 2.92%)</title><rect x="91.8653%" y="293" width="2.9154%" height="15" fill="rgb(254,173,49)" fg:x="106945" fg:w="3394"/><text x="92.1153%" y="303.50">gr..</text></g><g><title>graphics_year2`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;f64,f64,f64&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (3,394 samples, 2.92%)</title><rect x="91.8653%" y="277" width="2.9154%" height="15" fill="rgb(221,1,38)" fg:x="106945" fg:w="3394"/><text x="92.1153%" y="287.50">gr..</text></g><g><title>ntdll`RtlpAllocateHeapInternal (3,392 samples, 2.91%)</title><rect x="91.8670%" y="261" width="2.9137%" height="15" fill="rgb(206,124,46)" fg:x="106947" fg:w="3392"/><text x="92.1170%" y="271.50">nt..</text></g><g><title>ntdll`RtlpAllocateHeap (3,392 samples, 2.91%)</title><rect x="91.8670%" y="245" width="2.9137%" height="15" fill="rgb(249,21,11)" fg:x="106947" fg:w="3392"/><text x="92.1170%" y="255.50">nt..</text></g><g><title>ntdll`RtlDebugAllocateHeap (3,391 samples, 2.91%)</title><rect x="91.8679%" y="229" width="2.9129%" height="15" fill="rgb(222,201,40)" fg:x="106948" fg:w="3391"/><text x="92.1179%" y="239.50">nt..</text></g><g><title>graphics_year2`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer (43 samples, 0.04%)</title><rect x="94.7807%" y="341" width="0.0369%" height="15" fill="rgb(235,61,29)" fg:x="110339" fg:w="43"/><text x="95.0307%" y="351.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt;,rayon::vec::DrainProducer&lt;f64&gt; &gt;,rayon::iter::for_each::ForEachConsumer (43 samples, 0.04%)</title><rect x="94.7807%" y="325" width="0.0369%" height="15" fill="rgb(219,207,3)" fg:x="110339" fg:w="43"/><text x="95.0307%" y="335.50"></text></g><g><title>ntdll`RtlFreeHeap (14 samples, 0.01%)</title><rect x="94.8916%" y="165" width="0.0120%" height="15" fill="rgb(222,56,46)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="175.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (14 samples, 0.01%)</title><rect x="94.8916%" y="149" width="0.0120%" height="15" fill="rgb(239,76,54)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="159.50"></text></g><g><title>ntdll`RtlpFreeHeap (14 samples, 0.01%)</title><rect x="94.8916%" y="133" width="0.0120%" height="15" fill="rgb(231,124,27)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="143.50"></text></g><g><title>ntdll`RtlDebugFreeHeap (14 samples, 0.01%)</title><rect x="94.8916%" y="117" width="0.0120%" height="15" fill="rgb(249,195,6)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="127.50"></text></g><g><title>ntdll`RtlFreeHeap (14 samples, 0.01%)</title><rect x="94.8916%" y="101" width="0.0120%" height="15" fill="rgb(237,174,47)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="111.50"></text></g><g><title>ntdll`RtlpFreeHeapInternal (14 samples, 0.01%)</title><rect x="94.8916%" y="85" width="0.0120%" height="15" fill="rgb(206,201,31)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="95.50"></text></g><g><title>ntdll`RtlpFreeHeap (14 samples, 0.01%)</title><rect x="94.8916%" y="69" width="0.0120%" height="15" fill="rgb(231,57,52)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="79.50"></text></g><g><title>ntdll`RtlpSecMemFreeVirtualMemory (14 samples, 0.01%)</title><rect x="94.8916%" y="53" width="0.0120%" height="15" fill="rgb(248,177,22)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="63.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (14 samples, 0.01%)</title><rect x="94.8916%" y="37" width="0.0120%" height="15" fill="rgb(215,211,37)" fg:x="110468" fg:w="14"/><text x="95.1416%" y="47.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve_for_push (35 samples, 0.03%)</title><rect x="94.8916%" y="309" width="0.0301%" height="15" fill="rgb(241,128,51)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="319.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (35 samples, 0.03%)</title><rect x="94.8916%" y="293" width="0.0301%" height="15" fill="rgb(227,165,31)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (35 samples, 0.03%)</title><rect x="94.8916%" y="277" width="0.0301%" height="15" fill="rgb(228,167,24)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="287.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (35 samples, 0.03%)</title><rect x="94.8916%" y="261" width="0.0301%" height="15" fill="rgb(228,143,12)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="271.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (35 samples, 0.03%)</title><rect x="94.8916%" y="245" width="0.0301%" height="15" fill="rgb(249,149,8)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="255.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (35 samples, 0.03%)</title><rect x="94.8916%" y="229" width="0.0301%" height="15" fill="rgb(243,35,44)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="239.50"></text></g><g><title>ntdll`RtlReAllocateHeap (35 samples, 0.03%)</title><rect x="94.8916%" y="213" width="0.0301%" height="15" fill="rgb(246,89,9)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="223.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (35 samples, 0.03%)</title><rect x="94.8916%" y="197" width="0.0301%" height="15" fill="rgb(233,213,13)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="207.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (35 samples, 0.03%)</title><rect x="94.8916%" y="181" width="0.0301%" height="15" fill="rgb(233,141,41)" fg:x="110468" fg:w="35"/><text x="95.1416%" y="191.50"></text></g><g><title>ntdll`memcpy (19 samples, 0.02%)</title><rect x="94.9053%" y="165" width="0.0163%" height="15" fill="rgb(239,167,4)" fg:x="110484" fg:w="19"/><text x="95.1553%" y="175.50"></text></g><g><title>graphics_year2`crossbeam_deque::deque::Worker&lt;rayon_core::job::JobRef&gt;::pop (43 samples, 0.04%)</title><rect x="94.9414%" y="293" width="0.0369%" height="15" fill="rgb(209,217,16)" fg:x="110526" fg:w="43"/><text x="95.1914%" y="303.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt;,rayon::vec::DrainProducer&lt;f64&gt; &gt;,rayon::iter::for_each::ForEachConsumer (69 samples, 0.06%)</title><rect x="94.9783%" y="293" width="0.0593%" height="15" fill="rgb(219,88,35)" fg:x="110569" fg:w="69"/><text x="95.2283%" y="303.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve_for_push (18 samples, 0.02%)</title><rect x="95.0221%" y="277" width="0.0155%" height="15" fill="rgb(220,193,23)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="287.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="95.0221%" y="261" width="0.0155%" height="15" fill="rgb(230,90,52)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="271.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.02%)</title><rect x="95.0221%" y="245" width="0.0155%" height="15" fill="rgb(252,106,19)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="255.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (18 samples, 0.02%)</title><rect x="95.0221%" y="229" width="0.0155%" height="15" fill="rgb(206,74,20)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="239.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (18 samples, 0.02%)</title><rect x="95.0221%" y="213" width="0.0155%" height="15" fill="rgb(230,138,44)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="223.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (18 samples, 0.02%)</title><rect x="95.0221%" y="197" width="0.0155%" height="15" fill="rgb(235,182,43)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="207.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.02%)</title><rect x="95.0221%" y="181" width="0.0155%" height="15" fill="rgb(242,16,51)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="191.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (18 samples, 0.02%)</title><rect x="95.0221%" y="165" width="0.0155%" height="15" fill="rgb(248,9,4)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="175.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (18 samples, 0.02%)</title><rect x="95.0221%" y="149" width="0.0155%" height="15" fill="rgb(210,31,22)" fg:x="110620" fg:w="18"/><text x="95.2721%" y="159.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt;,rayon::vec::DrainProducer&lt;f64&gt; &gt;,rayon::iter::for_each::ForEachConsumer (277 samples, 0.24%)</title><rect x="94.8563%" y="325" width="0.2379%" height="15" fill="rgb(239,54,39)" fg:x="110427" fg:w="277"/><text x="95.1063%" y="335.50"></text></g><g><title>graphics_year2`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer&lt;alloc::vec::Vec (201 samples, 0.17%)</title><rect x="94.9216%" y="309" width="0.1727%" height="15" fill="rgb(230,99,41)" fg:x="110503" fg:w="201"/><text x="95.1716%" y="319.50"></text></g><g><title>graphics_year2`rayon_core::registry::WorkerThread::wait_until_cold (66 samples, 0.06%)</title><rect x="95.0376%" y="293" width="0.0567%" height="15" fill="rgb(253,106,12)" fg:x="110638" fg:w="66"/><text x="95.2876%" y="303.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_any_threads (44 samples, 0.04%)</title><rect x="95.0565%" y="277" width="0.0378%" height="15" fill="rgb(213,46,41)" fg:x="110660" fg:w="44"/><text x="95.3065%" y="287.50"></text></g><g><title>graphics_year2`rayon_core::sleep::Sleep::wake_specific_thread (44 samples, 0.04%)</title><rect x="95.0565%" y="261" width="0.0378%" height="15" fill="rgb(215,133,35)" fg:x="110660" fg:w="44"/><text x="95.3065%" y="271.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (39 samples, 0.03%)</title><rect x="95.0608%" y="245" width="0.0335%" height="15" fill="rgb(213,28,5)" fg:x="110665" fg:w="39"/><text x="95.3108%" y="255.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (39 samples, 0.03%)</title><rect x="95.0608%" y="229" width="0.0335%" height="15" fill="rgb(215,77,49)" fg:x="110665" fg:w="39"/><text x="95.3108%" y="239.50"></text></g><g><title>graphics_year2`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::iter::zip::ZipProducer&lt;rayon::slice::IterMutProducer (324 samples, 0.28%)</title><rect x="94.8177%" y="341" width="0.2783%" height="15" fill="rgb(248,100,22)" fg:x="110382" fg:w="324"/><text x="95.0677%" y="351.50"></text></g><g><title>graphics_year2`rayon_core::job::impl$4::execute&lt;ref$&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0 (29 samples, 0.02%)</title><rect x="95.0960%" y="341" width="0.0249%" height="15" fill="rgb(208,67,9)" fg:x="110706" fg:w="29"/><text x="95.3460%" y="351.50"></text></g><g><title>ntdll`RtlpWakeSRWLock (19 samples, 0.02%)</title><rect x="95.1046%" y="325" width="0.0163%" height="15" fill="rgb(219,133,21)" fg:x="110716" fg:w="19"/><text x="95.3546%" y="335.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (18 samples, 0.02%)</title><rect x="95.1054%" y="309" width="0.0155%" height="15" fill="rgb(246,46,29)" fg:x="110717" fg:w="18"/><text x="95.3554%" y="319.50"></text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (15 samples, 0.01%)</title><rect x="95.1218%" y="325" width="0.0129%" height="15" fill="rgb(246,185,52)" fg:x="110736" fg:w="15"/><text x="95.3718%" y="335.50"></text></g><g><title>graphics_year2`rayon_core::latch::impl$10::set (1,854 samples, 1.59%)</title><rect x="95.1218%" y="341" width="1.5926%" height="15" fill="rgb(252,136,11)" fg:x="110736" fg:w="1854"/><text x="95.3718%" y="351.50"></text></g><g><title>ntdll`RtlWakeAllConditionVariable (1,839 samples, 1.58%)</title><rect x="95.1346%" y="325" width="1.5797%" height="15" fill="rgb(219,138,53)" fg:x="110751" fg:w="1839"/><text x="95.3846%" y="335.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (1,818 samples, 1.56%)</title><rect x="95.1527%" y="309" width="1.5617%" height="15" fill="rgb(211,51,23)" fg:x="110772" fg:w="1818"/><text x="95.4027%" y="319.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (68 samples, 0.06%)</title><rect x="96.7152%" y="197" width="0.0584%" height="15" fill="rgb(247,221,28)" fg:x="112591" fg:w="68"/><text x="96.9652%" y="207.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (68 samples, 0.06%)</title><rect x="96.7152%" y="181" width="0.0584%" height="15" fill="rgb(251,222,45)" fg:x="112591" fg:w="68"/><text x="96.9652%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (67 samples, 0.06%)</title><rect x="96.7161%" y="165" width="0.0576%" height="15" fill="rgb(217,162,53)" fg:x="112592" fg:w="67"/><text x="96.9661%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (67 samples, 0.06%)</title><rect x="96.7161%" y="149" width="0.0576%" height="15" fill="rgb(229,93,14)" fg:x="112592" fg:w="67"/><text x="96.9661%" y="159.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (55 samples, 0.05%)</title><rect x="96.7264%" y="133" width="0.0472%" height="15" fill="rgb(209,67,49)" fg:x="112604" fg:w="55"/><text x="96.9764%" y="143.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (55 samples, 0.05%)</title><rect x="96.7264%" y="117" width="0.0472%" height="15" fill="rgb(213,87,29)" fg:x="112604" fg:w="55"/><text x="96.9764%" y="127.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (19 samples, 0.02%)</title><rect x="96.7736%" y="165" width="0.0163%" height="15" fill="rgb(205,151,52)" fg:x="112659" fg:w="19"/><text x="97.0236%" y="175.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (38 samples, 0.03%)</title><rect x="96.7736%" y="197" width="0.0326%" height="15" fill="rgb(253,215,39)" fg:x="112659" fg:w="38"/><text x="97.0236%" y="207.50"></text></g><g><title>ntdll`RtlpWakeByAddress (38 samples, 0.03%)</title><rect x="96.7736%" y="181" width="0.0326%" height="15" fill="rgb(221,220,41)" fg:x="112659" fg:w="38"/><text x="97.0236%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (19 samples, 0.02%)</title><rect x="96.7899%" y="165" width="0.0163%" height="15" fill="rgb(218,133,21)" fg:x="112678" fg:w="19"/><text x="97.0399%" y="175.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (19 samples, 0.02%)</title><rect x="96.7899%" y="149" width="0.0163%" height="15" fill="rgb(221,193,43)" fg:x="112678" fg:w="19"/><text x="97.0399%" y="159.50"></text></g><g><title>ntdll`RtlReAllocateHeap (118 samples, 0.10%)</title><rect x="96.7152%" y="261" width="0.1014%" height="15" fill="rgb(240,128,52)" fg:x="112591" fg:w="118"/><text x="96.9652%" y="271.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (118 samples, 0.10%)</title><rect x="96.7152%" y="245" width="0.1014%" height="15" fill="rgb(253,114,12)" fg:x="112591" fg:w="118"/><text x="96.9652%" y="255.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (118 samples, 0.10%)</title><rect x="96.7152%" y="229" width="0.1014%" height="15" fill="rgb(215,223,47)" fg:x="112591" fg:w="118"/><text x="96.9652%" y="239.50"></text></g><g><title>ntdll`RtlDebugReAllocateHeap (118 samples, 0.10%)</title><rect x="96.7152%" y="213" width="0.1014%" height="15" fill="rgb(248,225,23)" fg:x="112591" fg:w="118"/><text x="96.9652%" y="223.50"></text></g><g><title>ntdll`RtlReAllocateHeap (12 samples, 0.01%)</title><rect x="96.8063%" y="197" width="0.0103%" height="15" fill="rgb(250,108,0)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="207.50"></text></g><g><title>ntdll`RtlpReAllocateHeapInternal (12 samples, 0.01%)</title><rect x="96.8063%" y="181" width="0.0103%" height="15" fill="rgb(228,208,7)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="191.50"></text></g><g><title>ntdll`RtlpReAllocateHeap (12 samples, 0.01%)</title><rect x="96.8063%" y="165" width="0.0103%" height="15" fill="rgb(244,45,10)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="175.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (12 samples, 0.01%)</title><rect x="96.8063%" y="149" width="0.0103%" height="15" fill="rgb(207,125,25)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="159.50"></text></g><g><title>ntdll`RtlpAllocateHeap (12 samples, 0.01%)</title><rect x="96.8063%" y="133" width="0.0103%" height="15" fill="rgb(210,195,18)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="143.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (12 samples, 0.01%)</title><rect x="96.8063%" y="117" width="0.0103%" height="15" fill="rgb(249,80,12)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="127.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (12 samples, 0.01%)</title><rect x="96.8063%" y="101" width="0.0103%" height="15" fill="rgb(221,65,9)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="111.50"></text></g><g><title>ntdll`RtlpAllocateHeap (12 samples, 0.01%)</title><rect x="96.8063%" y="85" width="0.0103%" height="15" fill="rgb(235,49,36)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="95.50"></text></g><g><title>ntdll`RtlpExtendHeap (12 samples, 0.01%)</title><rect x="96.8063%" y="69" width="0.0103%" height="15" fill="rgb(225,32,20)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="79.50"></text></g><g><title>ntdll`RtlpFindAndCommitPages (12 samples, 0.01%)</title><rect x="96.8063%" y="53" width="0.0103%" height="15" fill="rgb(215,141,46)" fg:x="112697" fg:w="12"/><text x="97.0563%" y="63.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (20 samples, 0.02%)</title><rect x="96.8166%" y="213" width="0.0172%" height="15" fill="rgb(250,160,47)" fg:x="112709" fg:w="20"/><text x="97.0666%" y="223.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (20 samples, 0.02%)</title><rect x="96.8166%" y="197" width="0.0172%" height="15" fill="rgb(216,222,40)" fg:x="112709" fg:w="20"/><text x="97.0666%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (20 samples, 0.02%)</title><rect x="96.8166%" y="181" width="0.0172%" height="15" fill="rgb(234,217,39)" fg:x="112709" fg:w="20"/><text x="97.0666%" y="191.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (20 samples, 0.02%)</title><rect x="96.8166%" y="165" width="0.0172%" height="15" fill="rgb(207,178,40)" fg:x="112709" fg:w="20"/><text x="97.0666%" y="175.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (17 samples, 0.01%)</title><rect x="96.8191%" y="149" width="0.0146%" height="15" fill="rgb(221,136,13)" fg:x="112712" fg:w="17"/><text x="97.0691%" y="159.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (17 samples, 0.01%)</title><rect x="96.8191%" y="133" width="0.0146%" height="15" fill="rgb(249,199,10)" fg:x="112712" fg:w="17"/><text x="97.0691%" y="143.50"></text></g><g><title>graphics_year2`core::iter::adapters::map::impl$2::try_fold&lt;tuple$&lt;f64,f64,f64&gt;,core::ops::range::Range&lt;usize&gt;,ref$&lt;graphics_year2::shapes3d::sphere::impl$0::generate::closure$0::closure_env$0&gt;,alloc::vec::Vec&lt;tuple$ (141 samples, 0.12%)</title><rect x="96.7152%" y="309" width="0.1211%" height="15" fill="rgb(249,222,13)" fg:x="112591" fg:w="141"/><text x="96.9652%" y="319.50"></text></g><g><title>graphics_year2`alloc::raw_vec::RawVec&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken&lt;graphics_year2::parser::Rule&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;enum$&lt;pest::iterators::queueable_token::QueueableToken (141 samples, 0.12%)</title><rect x="96.7152%" y="293" width="0.1211%" height="15" fill="rgb(244,185,38)" fg:x="112591" fg:w="141"/><text x="96.9652%" y="303.50"></text></g><g><title>graphics_year2`alloc::raw_vec::finish_grow (141 samples, 0.12%)</title><rect x="96.7152%" y="277" width="0.1211%" height="15" fill="rgb(236,202,9)" fg:x="112591" fg:w="141"/><text x="96.9652%" y="287.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (23 samples, 0.02%)</title><rect x="96.8166%" y="261" width="0.0198%" height="15" fill="rgb(250,229,37)" fg:x="112709" fg:w="23"/><text x="97.0666%" y="271.50"></text></g><g><title>ntdll`RtlpAllocateHeap (23 samples, 0.02%)</title><rect x="96.8166%" y="245" width="0.0198%" height="15" fill="rgb(206,174,23)" fg:x="112709" fg:w="23"/><text x="97.0666%" y="255.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (23 samples, 0.02%)</title><rect x="96.8166%" y="229" width="0.0198%" height="15" fill="rgb(211,33,43)" fg:x="112709" fg:w="23"/><text x="97.0666%" y="239.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (38 samples, 0.03%)</title><rect x="96.8363%" y="245" width="0.0326%" height="15" fill="rgb(245,58,50)" fg:x="112732" fg:w="38"/><text x="97.0863%" y="255.50"></text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (38 samples, 0.03%)</title><rect x="96.8363%" y="229" width="0.0326%" height="15" fill="rgb(244,68,36)" fg:x="112732" fg:w="38"/><text x="97.0863%" y="239.50"></text></g><g><title>ntdll`RtlpWaitOnCriticalSection (38 samples, 0.03%)</title><rect x="96.8363%" y="213" width="0.0326%" height="15" fill="rgb(232,229,15)" fg:x="112732" fg:w="38"/><text x="97.0863%" y="223.50"></text></g><g><title>ntdll`RtlpWaitOnAddress (38 samples, 0.03%)</title><rect x="96.8363%" y="197" width="0.0326%" height="15" fill="rgb(254,30,23)" fg:x="112732" fg:w="38"/><text x="97.0863%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (30 samples, 0.03%)</title><rect x="96.8432%" y="181" width="0.0258%" height="15" fill="rgb(235,160,14)" fg:x="112740" fg:w="30"/><text x="97.0932%" y="191.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (30 samples, 0.03%)</title><rect x="96.8432%" y="165" width="0.0258%" height="15" fill="rgb(212,155,44)" fg:x="112740" fg:w="30"/><text x="97.0932%" y="175.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (20 samples, 0.02%)</title><rect x="96.8690%" y="245" width="0.0172%" height="15" fill="rgb(226,2,50)" fg:x="112770" fg:w="20"/><text x="97.1190%" y="255.50"></text></g><g><title>ntdll`RtlpWakeByAddress (20 samples, 0.02%)</title><rect x="96.8690%" y="229" width="0.0172%" height="15" fill="rgb(234,177,6)" fg:x="112770" fg:w="20"/><text x="97.1190%" y="239.50"></text></g><g><title>graphics_year2`std::panicking::try&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;f64,f64,f64&gt;,alloc::alloc::Global&gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0 (200 samples, 0.17%)</title><rect x="96.7152%" y="341" width="0.1718%" height="15" fill="rgb(217,24,9)" fg:x="112591" fg:w="200"/><text x="96.9652%" y="351.50"></text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::range::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::fold::FoldConsumer&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (200 samples, 0.17%)</title><rect x="96.7152%" y="325" width="0.1718%" height="15" fill="rgb(220,13,46)" fg:x="112591" fg:w="200"/><text x="96.9652%" y="335.50"></text></g><g><title>graphics_year2`rayon::iter::map::impl$8::complete&lt;usize,tuple$&lt;f64,f64,f64&gt;,rayon::iter::fold::FoldFolder&lt;rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;f64,f64,f64&gt;,alloc::alloc::Global&gt; &gt;  (59 samples, 0.05%)</title><rect x="96.8363%" y="309" width="0.0507%" height="15" fill="rgb(239,221,27)" fg:x="112732" fg:w="59"/><text x="97.0863%" y="319.50"></text></g><g><title>ntdll`RtlpAllocateHeapInternal (59 samples, 0.05%)</title><rect x="96.8363%" y="293" width="0.0507%" height="15" fill="rgb(222,198,25)" fg:x="112732" fg:w="59"/><text x="97.0863%" y="303.50"></text></g><g><title>ntdll`RtlpAllocateHeap (59 samples, 0.05%)</title><rect x="96.8363%" y="277" width="0.0507%" height="15" fill="rgb(211,99,13)" fg:x="112732" fg:w="59"/><text x="97.0863%" y="287.50"></text></g><g><title>ntdll`RtlDebugAllocateHeap (59 samples, 0.05%)</title><rect x="96.8363%" y="261" width="0.0507%" height="15" fill="rgb(232,111,31)" fg:x="112732" fg:w="59"/><text x="97.0863%" y="271.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (73 samples, 0.06%)</title><rect x="96.9377%" y="133" width="0.0627%" height="15" fill="rgb(245,82,37)" fg:x="112850" fg:w="73"/><text x="97.1877%" y="143.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (73 samples, 0.06%)</title><rect x="96.9377%" y="117" width="0.0627%" height="15" fill="rgb(227,149,46)" fg:x="112850" fg:w="73"/><text x="97.1877%" y="127.50"></text></g><g><title>ntdll`RtlpWaitOnAddressRemoveWaitBlock (191 samples, 0.16%)</title><rect x="96.9351%" y="149" width="0.1641%" height="15" fill="rgb(218,36,50)" fg:x="112847" fg:w="191"/><text x="97.1851%" y="159.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (115 samples, 0.10%)</title><rect x="97.0004%" y="133" width="0.0988%" height="15" fill="rgb(226,80,48)" fg:x="112923" fg:w="115"/><text x="97.2504%" y="143.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (105 samples, 0.09%)</title><rect x="97.0090%" y="117" width="0.0902%" height="15" fill="rgb(238,224,15)" fg:x="112933" fg:w="105"/><text x="97.2590%" y="127.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (562 samples, 0.48%)</title><rect x="97.0992%" y="149" width="0.4828%" height="15" fill="rgb(241,136,10)" fg:x="113038" fg:w="562"/><text x="97.3492%" y="159.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (562 samples, 0.48%)</title><rect x="97.0992%" y="133" width="0.4828%" height="15" fill="rgb(208,32,45)" fg:x="113038" fg:w="562"/><text x="97.3492%" y="143.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (2,552 samples, 2.19%)</title><rect x="96.9102%" y="213" width="2.1922%" height="15" fill="rgb(207,135,9)" fg:x="112818" fg:w="2552"/><text x="97.1602%" y="223.50">n..</text></g><g><title>ntdll`RtlpEnterCriticalSectionContended (2,551 samples, 2.19%)</title><rect x="96.9111%" y="197" width="2.1913%" height="15" fill="rgb(206,86,44)" fg:x="112819" fg:w="2551"/><text x="97.1611%" y="207.50">n..</text></g><g><title>ntdll`RtlpWaitOnCriticalSection (2,531 samples, 2.17%)</title><rect x="96.9282%" y="181" width="2.1741%" height="15" fill="rgb(245,177,15)" fg:x="112839" fg:w="2531"/><text x="97.1782%" y="191.50">n..</text></g><g><title>ntdll`RtlpWaitOnAddress (2,528 samples, 2.17%)</title><rect x="96.9308%" y="165" width="2.1715%" height="15" fill="rgb(206,64,50)" fg:x="112842" fg:w="2528"/><text x="97.1808%" y="175.50">n..</text></g><g><title>ntdll`RtlpWaitOnAddressWithTimeout (1,770 samples, 1.52%)</title><rect x="97.5819%" y="149" width="1.5204%" height="15" fill="rgb(234,36,40)" fg:x="113600" fg:w="1770"/><text x="97.8319%" y="159.50"></text></g><g><title>ntdll`NtWaitForAlertByThreadId (1,767 samples, 1.52%)</title><rect x="97.5845%" y="133" width="1.5178%" height="15" fill="rgb(213,64,8)" fg:x="113603" fg:w="1767"/><text x="97.8345%" y="143.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (448 samples, 0.38%)</title><rect x="99.1041%" y="181" width="0.3848%" height="15" fill="rgb(210,75,36)" fg:x="115372" fg:w="448"/><text x="99.3541%" y="191.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (1,003 samples, 0.86%)</title><rect x="99.1023%" y="213" width="0.8616%" height="15" fill="rgb(229,88,21)" fg:x="115370" fg:w="1003"/><text x="99.3523%" y="223.50"></text></g><g><title>ntdll`RtlpWakeByAddress (1,002 samples, 0.86%)</title><rect x="99.1032%" y="197" width="0.8607%" height="15" fill="rgb(252,204,47)" fg:x="115371" fg:w="1002"/><text x="99.3532%" y="207.50"></text></g><g><title>ntdll`RtlpWaitOnAddressWakeEntireList (553 samples, 0.48%)</title><rect x="99.4889%" y="181" width="0.4750%" height="15" fill="rgb(208,77,27)" fg:x="115820" fg:w="553"/><text x="99.7389%" y="191.50"></text></g><g><title>ntdll`NtAlertThreadByThreadId (553 samples, 0.48%)</title><rect x="99.4889%" y="165" width="0.4750%" height="15" fill="rgb(221,76,26)" fg:x="115820" fg:w="553"/><text x="99.7389%" y="175.50"></text></g><g><title>graphics_year2`std::panicking::try&lt;rayon::iter::collect::consumer::CollectResult&lt;graphics_year2::vector3d::Vector3D&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult (3,594 samples, 3.09%)</title><rect x="96.8870%" y="341" width="3.0872%" height="15" fill="rgb(225,139,18)" fg:x="112791" fg:w="3594"/><text x="97.1370%" y="351.50">gra..</text></g><g><title>graphics_year2`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (3,594 samples, 3.09%)</title><rect x="96.8870%" y="325" width="3.0872%" height="15" fill="rgb(230,137,11)" fg:x="112791" fg:w="3594"/><text x="97.1370%" y="335.50">gra..</text></g><g><title>graphics_year2`rayon::iter::plumbing::Producer::fold_with&lt;rayon::iter::chunks::ChunkProducer&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (3,594 samples, 3.09%)</title><rect x="96.8870%" y="309" width="3.0872%" height="15" fill="rgb(212,28,1)" fg:x="112791" fg:w="3594"/><text x="97.1370%" y="319.50">gra..</text></g><g><title>graphics_year2`rayon::iter::chunks::impl$4::next&lt;rayon::iter::map::MapProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::zip::ZipProducer&lt;rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer&lt;f64&gt; &gt;,rayon::iter::copied::CopiedProducer&lt;rayon::slice::IterProducer (3,577 samples, 3.07%)</title><rect x="96.9016%" y="293" width="3.0726%" height="15" fill="rgb(248,164,17)" fg:x="112808" fg:w="3577"/><text x="97.1516%" y="303.50">gra..</text></g><g><title>graphics_year2`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;f64,f64,f64&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (3,577 samples, 3.07%)</title><rect x="96.9016%" y="277" width="3.0726%" height="15" fill="rgb(222,171,42)" fg:x="112808" fg:w="3577"/><text x="97.1516%" y="287.50">gra..</text></g><g><title>ntdll`RtlpAllocateHeapInternal (3,575 samples, 3.07%)</title><rect x="96.9033%" y="261" width="3.0709%" height="15" fill="rgb(243,84,45)" fg:x="112810" fg:w="3575"/><text x="97.1533%" y="271.50">ntd..</text></g><g><title>ntdll`RtlpAllocateHeap (3,574 samples, 3.07%)</title><rect x="96.9042%" y="245" width="3.0701%" height="15" fill="rgb(252,49,23)" fg:x="112811" fg:w="3574"/><text x="97.1542%" y="255.50">ntd..</text></g><g><title>ntdll`RtlDebugAllocateHeap (3,570 samples, 3.07%)</title><rect x="96.9076%" y="229" width="3.0666%" height="15" fill="rgb(215,19,7)" fg:x="112815" fg:w="3570"/><text x="97.1576%" y="239.50">ntd..</text></g><g><title>ntdll`RtlpAllocateHeapInternal (12 samples, 0.01%)</title><rect x="99.9639%" y="213" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="116373" fg:w="12"/><text x="100.2139%" y="223.50"></text></g><g><title>graphics_year2`crossbeam_deque::deque::Injector&lt;rayon_core::job::JobRef&gt;::push (13 samples, 0.01%)</title><rect x="99.9785%" y="325" width="0.0112%" height="15" fill="rgb(210,199,37)" fg:x="116390" fg:w="13"/><text x="100.2285%" y="335.50"></text></g><g><title>graphics_year2`std::thread::local::LocalKey&lt;rayon_core::latch::LockLatch&gt;::with&lt;rayon_core::latch::LockLatch,rayon_core::registry::impl$6::in_worker_cold::closure_env$0&lt;rayon_core::join::join_context::closure_env$0 (27 samples, 0.02%)</title><rect x="99.9742%" y="341" width="0.0232%" height="15" fill="rgb(244,192,49)" fg:x="116385" fg:w="27"/><text x="100.2242%" y="351.50"></text></g><g><title>all (116,415 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(226,211,11)" fg:x="0" fg:w="116415"/><text x="0.2500%" y="367.50"></text></g></svg></svg>